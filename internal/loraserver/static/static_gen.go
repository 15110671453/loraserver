// Code generated by go-bindata.
// sources:
// ../../static/index.html
// ../../static/js/app.js
// ../../static/partials/api.html
// ../../static/partials/application.html
// ../../static/partials/applications.html
// ../../static/partials/channel_list.html
// ../../static/partials/channel_lists.html
// ../../static/partials/navbar.html
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x5f\x53\x9b\x4e\x14\x7d\xf7\x53\xf0\xdb\x57\x7f\x40\x10\x63\x62\x07\x9c\x89\x86\xd6\x66\x12\x13\x8d\x25\xea\xdb\x06\x2e\xb0\x64\xd9\x85\xdd\x25\x21\x7e\xfa\x2e\x49\xad\xf6\x9f\xb5\x9d\xe9\x13\x7b\xef\x9e\xfb\xe7\x1c\xe0\x78\xff\x0d\xa7\x17\xb7\xf7\xb3\xc0\xc8\x54\x41\xcf\x0e\xbc\xf6\x61\x50\xcc\x52\x1f\x01\x43\x06\x4b\x4d\x5c\x96\x3e\xa2\x5c\x60\x09\x62\x0d\x02\x9d\x1d\x18\x86\x97\x01\x8e\xdb\x83\x3e\x16\xa0\xb0\x11\x65\x58\x48\x50\x3e\xaa\x55\x62\xf6\xd1\xcb\xab\x4c\xa9\xd2\x84\xaa\x26\x6b\x1f\xdd\x99\x9f\x06\xe6\x05\x2f\x4a\xac\xc8\x92\x02\x32\x22\xce\x14\x30\x5d\xf7\x31\xf0\x21\x4e\xe1\x9b\x4a\x86\x0b\xf0\xd1\x9a\xc0\xa6\xe4\x42\xbd\x00\x6f\x48\xac\x32\x3f\x86\x35\x89\xc0\xdc\x05\xff\x1b\x84\x11\x45\x30\x35\x65\x84\x29\xf8\xce\x53\x23\x45\x14\x85\xb3\x31\xbf\xc1\xc6\x7c\xb7\xbf\x67\xef\x53\xfb\x6b\x4a\xd8\xca\x10\x40\x7d\x24\xd5\x96\x82\xcc\x00\xf4\xa0\x4c\x40\xe2\xa3\x76\x71\xf9\xce\xb6\x0b\xdc\x44\x31\xb3\x96\x9c\x2b\xa9\x04\x2e\xdb\x20\xe2\x85\xfd\x35\x61\xbb\x96\x6b\x9d\xd8\x91\x94\xcf\x39\xab\x20\x1a\x25\x25\xd2\x8b\x29\x48\x05\x51\x5b\x3d\x23\xc3\x6e\xff\xd8\x74\xaa\x7e\x71\x3b\x9a\x0e\xe6\x4d\x3f\x77\x06\xf5\x21\xee\x2e\x86\x21\x9b\x91\x23\xba\x7a\x9f\x6c\x36\xc1\x00\xf7\xb3\xe1\x30\xce\x1f\x68\x39\x86\xb4\xc9\xf2\x70\x12\x38\x49\x9a\x2f\x66\x1f\x8a\xd5\xa3\xec\x69\x25\x04\x97\x92\x0b\x92\x12\xe6\x23\xcc\x38\xdb\x16\xbc\x96\xe8\x5f\x93\x32\x55\x06\x05\xbc\x46\x2d\x19\x2f\x8e\xae\x3a\x0e\x9d\x54\x39\x5e\x9d\xaf\x1a\x97\xda\x93\xd3\x00\x67\xf5\xa6\x9c\x27\x70\xb5\x0e\x4f\xdc\x51\x17\x1e\x99\x5b\x3f\x3c\xe2\xf2\xb6\x53\xf7\x82\x7b\x79\x37\xc9\xaf\xc3\xc3\x4e\xc0\xba\xe2\x77\xd4\x64\x24\x48\xa9\x0c\x29\xa2\x67\x2a\x38\xc7\x8d\x95\x72\x9e\x52\xc0\x25\x91\x3b\x1a\x6d\xce\xa6\x64\x29\xed\xbc\xaa\x41\x6c\x6d\xc7\x72\x1c\xcb\xfd\x12\xed\x18\xe4\xba\xa9\x67\xef\x1b\xbe\xd2\xfd\xad\x42\xe5\xdf\xbf\xfc\xfc\xa7\x02\x75\x8a\xf9\x72\x34\x0c\x2e\xf5\xa7\x9a\x14\xf5\xf9\xf9\xf5\xec\x64\x70\x7c\x2d\x4a\x51\x75\xa7\x61\xb2\x70\x7b\xb3\x9b\x1b\x37\xef\x06\xe3\xaa\x91\xd2\xd9\x86\xd5\x54\x31\x28\xd9\x65\x38\x3b\xc5\xa3\x5e\x33\xff\xb5\x40\x6f\xe0\xf2\xba\x52\xfa\xa7\xaf\x29\x16\x9a\x88\x63\x75\xad\xce\x53\xfc\x27\x62\xfd\xd5\x00\x53\xf0\x5a\xc1\x5b\xc6\xe8\x4a\xed\x46\x3f\xa0\x3c\xfb\xc9\x8e\xbc\x25\x8f\xb7\xfb\x42\xc3\x8b\xc9\xba\xf5\xaf\xd6\x3f\x34\x5c\x47\x7b\xec\x1e\xa2\x6b\x5a\xc3\xfb\x1c\x00\x00\xff\xff\x78\x44\x55\x33\x00\x05\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 1280, mode: os.FileMode(420), modTime: time.Unix(1462818887, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsAppJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x5a\xdf\x6f\xdb\x36\x10\x7e\xf7\x5f\xc1\xb9\x01\x28\x63\x9e\xbc\x3d\xce\x41\x30\x64\xc9\x5a\x04\xd8\x86\xa2\x6b\x9e\x82\x60\xd0\x24\xda\xd6\x20\x93\x02\x49\x27\x08\x02\xff\xef\x3b\x52\xbf\x28\x99\xb2\x49\xa5\x49\x35\x54\x2f\xa9\x24\xf2\x78\xf7\xdd\xc7\xbb\x8f\x72\x1f\x22\x8e\x32\xc6\x23\x41\xf8\x03\xe1\xe8\x02\x45\x74\xbd\xcb\x22\x1e\x6e\x59\xb2\xcb\x48\x80\x9b\x97\x78\x8e\xee\x26\x08\x2e\x4c\xd7\x9f\xd8\x4e\x12\x3c\x9f\x14\xf7\xcd\x98\x2b\x46\x25\x67\x59\x46\xb8\xc0\xfa\xdd\xfd\xec\x7c\x32\x69\xde\x87\x31\xa3\xab\x74\x1d\xdc\x4d\xcf\x72\xce\x1e\xd2\x84\x4c\xe7\x68\xb5\xa3\xb1\x4c\x19\x0d\xaa\x67\x33\xf4\xac\x27\x73\x22\x77\x9c\xa2\xea\x71\x98\x90\x18\x2c\x49\xc6\x03\x7c\xb6\x91\x32\x57\x1e\xe1\xb3\x84\x64\x64\x1d\x29\x77\x0c\x4b\xd5\xc3\xca\x94\xba\xea\x87\x21\xcf\x63\x08\xb5\x1e\xbd\x25\x72\xc3\x92\x39\xca\x23\x1e\xc1\xbf\xc1\x79\x73\x9a\xba\x14\x4c\x49\x24\x23\x98\xf5\x3c\x2d\x86\x4f\x97\xa8\x9a\x37\xd5\x13\x05\x3c\xb9\x6b\x4c\xdc\xc3\xf3\x34\x99\xa2\x25\xfa\x69\x7f\xde\x32\x56\x85\x55\xbb\x93\x33\x21\x03\xbc\x00\xaf\x20\x06\xb5\xcc\x1c\x3d\xe3\x0d\x89\x12\x05\xe3\xf2\x19\x2b\x54\x09\x95\x3f\x7c\x7e\xca\x09\x5e\x22\x1c\xe5\x79\x96\xc6\x91\xf2\x7d\xf1\xaf\x60\x14\xef\xf7\xb3\x66\x09\x63\xb5\xee\x4a\xc6\xa0\xfb\x72\xc6\xbe\x2f\x43\xf8\x8c\xab\x24\x7f\x2c\xb0\x87\xec\xeb\xe1\x0d\xc2\xad\xb7\x2d\x98\x5b\x6f\xc2\x56\xe8\x8f\x1b\x42\x21\x52\x23\x00\x01\x21\xb7\xb1\x56\x97\x24\xdb\x3c\x03\x87\x6f\x79\x06\xf1\x02\xa8\x32\x8d\x32\xd1\x9a\x17\x6e\xe4\x36\x2b\xbd\x32\xaf\xb8\xa6\x20\xcc\xbc\x6c\x26\xfc\x9e\x0a\x79\x25\x79\x86\x5b\x33\xf6\xb3\x93\x0e\x2e\x96\xc6\xdd\x40\x6f\x7d\x9d\x75\x76\x34\xde\x44\x94\x92\xcc\x0b\xc5\x72\xce\xdf\x19\x20\xe2\x06\xe3\x55\x31\x43\x41\xe8\x05\x63\xe5\xdd\x62\xa9\xd6\x1a\xea\xa3\xaf\x8b\x1e\x59\x4e\xfd\xf2\x99\xba\xe5\xf1\xe3\xcd\x69\x17\x98\xdc\x10\xfe\x98\x0a\x12\x1c\xae\xcf\x49\x92\x72\x12\xcb\xcf\x0c\xac\xb5\x37\x4b\xc7\x66\x67\x43\x4f\xda\xe5\xdc\xa8\xc6\x47\x2b\xbb\x59\xb5\xa1\xa4\x6a\x4b\x8b\x05\x4a\x52\x01\x30\x3c\x21\x55\x2d\x13\x16\x8b\x89\x75\x46\xd8\xc4\x1e\xd4\xa1\xeb\xc2\x2c\x62\x96\xab\xaa\x5c\x15\xeb\x56\x01\x41\x41\xf1\x7e\x8e\xf4\xdb\x56\x01\xd1\x2f\xc2\x3c\x5a\x13\x70\x1b\xab\x2c\x35\x71\xea\xd1\xe1\x9a\x54\x05\x73\x16\x8a\x5d\x1c\x13\x21\x82\xba\x34\xa9\x0a\xda\x2d\xe0\xa5\x4d\xb0\xa5\xa0\x50\x23\x0c\xe8\x5a\xa5\x10\x02\xdf\x46\x54\xad\x6d\x02\xef\x12\xbb\xa5\xd6\x58\x71\x40\x55\x69\xd5\x5d\xa3\xb9\x3f\x8e\xd0\x1c\x99\xb3\xaa\xbb\xa3\xb8\x19\xbc\xe9\x02\x08\xd0\xb5\x3c\x0e\x3f\x10\xbd\xb5\xd5\x7e\xc0\x59\xba\x4d\x25\x34\x9a\x9f\xe1\x02\xef\xd8\x6a\x25\x88\xba\xff\x71\xef\x88\x76\x0b\xf1\xbc\x42\x3c\xe4\x44\xec\x32\xd9\x06\xbe\xeb\x7d\xcc\x09\xec\x3c\xc3\x33\xb3\x51\x83\xb1\xee\x52\xe9\x4a\x3d\x45\x17\x17\x88\xee\xb2\xcc\xea\x48\x80\xdf\x15\x56\xff\x60\x49\x94\x01\x63\xb6\xea\x6f\x30\x0b\xc1\x22\xde\xa4\x49\x42\x68\xf8\x8f\x28\x9e\x9a\x22\xc2\x66\x4c\x1b\xd4\xc8\x43\x34\x19\x8b\x92\x60\x76\x7e\x30\x68\xdf\x79\xb6\x47\x50\x03\x89\xcd\x35\x7b\x2e\xae\xb4\xb7\xe0\x8a\x8a\xd7\x1d\xf1\x02\x0e\xa4\xdf\x87\x84\x73\xc6\x8f\xc1\x72\x0a\x1e\x85\x0c\xc1\x96\xe8\x74\x44\x76\x60\x8a\x14\x96\x4b\xa3\xc6\x0f\x07\x88\x4c\xf9\xd2\xe5\x04\x94\x43\xe9\xce\x88\x7e\x82\x17\x88\x2a\x4a\xfe\x76\x7b\x33\x88\xca\x7d\x4c\x36\xc1\xec\x78\xfb\xd5\x48\xd7\x96\x84\x5d\x4c\x77\x79\xe2\xb5\xcf\x7a\x50\xbd\xd5\x66\xbc\xa9\xea\x47\xd3\x93\xa8\xf6\x72\xf5\x90\xa7\x8e\x1c\x3d\x81\x9e\x12\xd4\x7e\x55\x0a\x05\x5a\x58\xf3\x2d\xe0\xc7\x09\x7a\x62\x3b\x24\x76\xe5\x3f\x1e\x23\x2a\x91\x64\xa8\xb0\x8a\x30\xfa\xde\xe0\x29\xdc\xe0\x5f\xf0\xcc\xca\x4b\x7b\x4e\xae\xb5\x99\xa1\x64\xb7\xa4\xe7\xbb\xd3\x55\x24\x82\x16\x28\x8d\x39\x7e\x75\xc3\x9b\xdb\xdd\xc3\x4e\xb7\x75\x53\x96\x10\xcf\x9e\x3d\xb6\x7e\xed\xd0\xb0\x71\x7b\x8d\xd0\xb0\xe0\x2b\x8b\x4c\x22\x3b\xf4\xea\xc6\xa5\x3f\x01\xe9\x4a\x3c\xbc\x67\xfc\x52\xd3\x4d\xab\x88\x82\x79\x20\x1b\xfa\x7c\x04\x20\x5f\xac\x34\xca\x00\x74\xbe\x7d\x5d\x37\x8e\x0c\x5f\x56\xfe\x54\x52\xa6\xb1\x3f\x40\x02\x29\x60\xcd\xaa\xa2\x42\xb4\x95\x15\xaa\xc7\xb9\xc8\x1f\x65\xd1\xb7\x1b\xbd\xb6\x02\x52\xde\x57\x85\xee\xa2\x97\x29\x96\x46\xdb\x61\x60\x2d\x99\x34\x4c\x6f\xa7\x99\x0e\x31\x1d\x99\x6e\x72\xa1\x91\x65\x3b\x97\x48\x42\xa3\x7b\x18\xa4\x95\x0a\x56\xba\x89\xa5\x21\xbc\x7c\x53\x95\x34\x04\xc3\x5a\x18\x79\x12\x72\x98\x32\xf2\xa0\xe1\xeb\x4a\x22\xd7\xaa\xe5\x25\x86\x0c\x26\xba\xa9\x21\x9d\x81\x5a\x06\x0d\x23\xf2\x61\x2e\xc6\x2d\x83\xfa\x36\xff\x5f\x10\x6d\x47\xa0\x3a\xf0\xb7\x9c\xa5\x4a\xc1\xaf\x4f\xd7\x1a\xbb\x17\x97\x84\xde\x26\x58\x5d\x0a\x6f\x63\xf0\x09\xea\x1b\x56\xfb\x13\x52\x38\xbb\x34\x3d\x3f\xfc\x7a\x57\x5d\x45\x1f\x5a\x9a\x4d\xa9\x7f\xf0\xea\x8a\xca\xdb\x1c\x54\xc1\xf1\x21\xd7\xec\x91\xc2\x20\x3b\x0d\x9c\x76\x27\x6c\x71\xda\x64\x64\xf4\x85\xd2\xc6\xb7\x83\xdf\x53\x7a\xd8\xd6\x14\x4d\xe1\xce\x2f\xff\x8a\xd9\x0b\xe7\x17\x29\x9a\xc8\x07\xb7\x35\x91\x9f\x22\x9a\xb0\x2d\xec\xb1\xcb\x24\xe1\x83\x60\xfb\xd0\x31\xa2\x00\x54\x10\xb8\x6f\x51\x2a\xd4\xe6\x28\x1d\x38\xde\xb4\x07\x35\x0b\xfd\xa7\x73\x46\x2b\xe5\x31\xd2\x3f\x43\x38\x9c\xd5\x6c\x3f\x42\x7c\xcd\xf3\x5a\xfd\xd3\x8b\xf5\xdb\xea\xb8\x0f\x17\x6a\x9a\x49\xb5\xf8\x60\xbf\xe8\x26\x9d\xb9\x1d\x2c\x8c\x58\xc7\xfc\x89\xd5\x4c\x49\x7d\x5e\x88\x7d\xb6\x49\x05\xcc\xd0\xd3\x42\x2f\x50\x23\x3b\x34\x9c\xa6\x47\x3f\xd3\x35\xa6\x61\x9a\xf8\x0b\x04\x83\xd2\xae\x47\x87\x31\x30\xcf\xa5\x31\x0e\x06\xb4\xee\x88\x5e\x3c\x1d\x76\x88\xf0\x67\xe7\xeb\x9e\x25\x1c\x8b\x94\xcf\x49\x02\x98\x49\xa3\x2d\x71\x3b\x45\x98\x79\xa8\x0f\x13\xbe\xdc\xb6\xa4\x63\xdc\xe7\x08\xfd\xe7\x48\xab\xf6\xeb\xd4\xff\xaf\x2e\x8d\xf5\xff\x01\x12\xe4\x86\xca\xa0\xf5\x2d\x4a\x05\x3e\x1b\xdc\xa0\x8f\xf5\xe7\x7e\xa7\x94\x43\xef\x19\x37\x5c\x7c\x05\xf7\x06\x68\x87\xd2\xa1\xd6\xce\xb4\x6e\x4c\x2f\xf1\x30\x3a\xe1\x10\x9b\x19\xbc\xb9\x56\x5f\x27\x0f\x12\x0b\xa5\xe0\xe8\xa7\xc9\x2a\x93\x8d\xda\x78\x7b\xb1\x31\x6a\xa1\xe1\xc2\x25\xfb\xce\x50\x60\xbe\x44\x65\x78\x2a\x8c\x51\xab\x8b\x81\x28\x36\xda\xe2\xad\xa4\xc5\x28\x64\x85\x73\xfd\x72\x15\x16\x15\xa3\xde\x15\x12\xa3\x66\x98\x8f\xc8\x30\x04\xc6\xb7\xa2\x2f\xfe\x0b\x00\x00\xff\xff\xf4\x13\xbd\x7e\x7b\x2c\x00\x00")

func jsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_jsAppJs,
		"js/app.js",
	)
}

func jsAppJs() (*asset, error) {
	bytes, err := jsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/app.js", size: 11387, mode: os.FileMode(420), modTime: time.Unix(1466838517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsApiHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x58\xe5\xe0\x04\xa8\x44\xa0\xe9\x29\xa0\x04\x14\x3d\xb5\x87\xd4\x48\xfb\x03\x6b\x69\x23\x12\xa5\x48\x75\x49\x19\x30\x02\xff\x7b\x49\xc9\xb2\xa5\x58\x70\x1f\x87\x5c\x4c\x7a\x39\x3b\x3b\x9c\xa1\x2d\x4c\x9d\x2a\x53\xea\xae\x42\xe6\xa8\xcc\x93\x75\x0b\xe4\x15\x68\xc7\x0d\xec\xb6\x40\x99\xf4\x8d\x5e\x27\x85\xe0\x67\x64\xb1\x5a\x89\x4a\xed\x58\xa9\xc1\xb9\x3c\x29\xad\xf1\xa0\x0c\x52\x52\xac\x18\x13\xf2\x43\xf1\xf5\xfb\xb7\xc7\xf4\x69\xf3\x99\x7d\xda\x7c\x11\x3c\x14\x62\x3d\x76\x04\x0e\xc2\x16\xc1\xe7\xc9\x2d\xb4\xea\x11\x1a\x7c\xcf\xc2\xe6\x8e\x29\x13\x57\xd7\x53\x0c\x24\x2f\x2f\xec\x08\x61\x87\x03\x6b\xd0\x4b\x5b\xb9\x91\x6d\x81\x6f\x40\x0c\x94\xc3\x7e\x64\xcd\x8e\xcd\x47\xf2\x48\xff\xb1\x10\xc0\x24\xe1\x73\x9e\x48\xef\x5b\xf7\xc0\x79\x6d\x2b\x5b\x66\x96\x6a\x5e\x2b\x2f\xbb\x6d\x56\xda\x86\x6f\xc9\x96\x00\xc4\xb5\x25\x70\x48\x3b\x24\xae\x8c\x47\x32\xa0\x27\xb5\x9b\x99\xd6\x70\xe9\x2c\x14\xce\x7a\x42\x2d\x99\x5f\xe7\xe2\x5c\x70\x08\x16\x07\x59\xa3\xc2\x89\xbf\x2d\x18\xd4\xac\xff\x4c\x2b\x7c\x86\x4e\xfb\xd3\x4d\x16\x90\xa9\x44\xa8\x94\xa9\x27\x98\x78\xe3\xfb\x39\xc8\x2b\xaf\x31\x29\x9e\xf0\x57\x87\xce\x3f\x30\xe1\x42\xfd\x04\xe9\xb4\x4e\x49\xd5\xd2\xf7\xba\x07\xa5\x19\x50\xdd\x35\x68\xfc\x8f\x7d\x8b\x63\x2c\x43\x5b\x7c\x1a\xc1\xc9\x57\xb8\xcd\xcf\x7a\x03\x5e\xb2\x77\x39\x5b\x87\x17\x74\x7b\xc5\xf1\xcb\x21\x63\xf3\xe1\x70\x73\x55\xc1\x92\xc0\x73\x6f\xb4\xf5\x4e\xf0\x28\xb2\x38\x2d\xf2\x7e\xe2\x1e\x0f\xf6\x5d\x33\x73\x6b\xab\xfd\xdc\xc9\x96\x70\x61\x66\x7c\xf2\xfd\xc0\x78\xbc\x4c\x3f\xff\xf2\x66\x01\xbb\xd6\x1a\x87\x7f\x95\x70\xf8\x2d\xe9\xfd\x9f\xe2\xed\x41\xff\x95\xed\xac\x73\x16\xec\xeb\xc1\x17\xa2\xde\x32\xd2\x7e\xe0\xbf\xe5\x39\xdd\x4a\xea\xff\xee\x86\xca\x71\xf9\x1d\x00\x00\xff\xff\x8c\xd4\x0e\x37\x67\x05\x00\x00")

func partialsApiHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsApiHtml,
		"partials/api.html",
	)
}

func partialsApiHtml() (*asset, error) {
	bytes, err := partialsApiHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/api.html", size: 1383, mode: os.FileMode(420), modTime: time.Unix(1463414765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsApplicationHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\x51\x6f\xdb\xb6\x13\x7f\xcf\xa7\x20\xf4\x07\xfe\x4d\x81\xd8\x5a\x80\x3e\x6d\xb2\x80\x2c\xee\x80\x62\x59\x36\x24\x28\xba\x57\x4a\xa4\x2d\x22\x14\x29\x90\x94\x13\xa3\xe8\x77\xdf\x91\x12\x65\x4a\xb1\x9c\xa4\x51\xdb\x61\xf0\x43\x6b\xf2\xee\x74\xc7\xdf\x91\x77\xfc\x49\x49\xc4\x7a\xc6\x44\xce\x6b\x42\x91\x56\xf9\x22\x7a\x53\x61\x65\x18\xe6\x3a\x16\x78\x93\x61\x35\x2f\x4c\xc9\xdf\x44\x69\x12\xef\x2c\xd3\x93\x93\x84\xb0\x0d\xca\x39\xd6\x7a\x11\xe5\x52\x18\xcc\x04\x55\x51\x7a\x82\x50\x22\xb9\x57\x64\x8a\x62\x92\xab\xba\xcc\x9c\x06\x74\x9c\xa5\x09\x46\x85\xa2\xab\x45\x14\xff\x2f\xc6\x55\xc5\x59\x8e\x0d\x93\x42\x47\xe9\x45\x30\x4b\x62\x0c\x21\xc1\x1c\xa1\xee\xc9\xcf\x9f\x51\xf0\xc0\x1c\xc6\xef\x3f\x7e\x40\x5f\xbe\x38\x3b\x6f\xe5\x63\xe3\xdc\xb0\x0d\x8d\x52\x21\x09\xd5\xde\x22\x89\x25\x87\xc5\xc3\xc0\xe0\x8c\x53\x6f\xdb\x4c\xdc\xff\xb3\x42\x6e\x5a\x20\xd6\xaa\x00\x00\xcd\xd8\xcd\xd2\x25\xdd\x40\xcc\x24\x86\x61\x20\x85\x85\xff\x4e\xb7\x03\x69\xe7\x9c\x3e\x98\x99\x62\xeb\xc2\x00\xc2\xbc\x05\xe7\x2d\xed\xa8\x0b\x91\x98\x4c\x92\xed\xce\x85\x42\x90\x72\x45\x2b\x8a\xcd\x22\xb2\x38\x10\x13\xc8\xe1\x89\xbc\x91\x35\x23\x36\x31\x56\x3c\x27\x6e\x75\x2e\x23\x86\xec\x37\xc1\x6e\xa9\xfb\x4c\xf6\xad\xb7\xd3\x83\x05\xee\x76\xd5\x08\x04\xff\x66\xba\x74\x3f\x84\xae\x70\xcd\x4d\x64\x17\x9b\xc3\xe6\xdc\x2d\x22\x4a\x98\xb9\x86\x68\xb7\x54\x6b\xc0\x7b\x6a\x23\xbf\x8d\xd2\x76\x8a\x62\x74\xf1\xeb\x5f\x76\x83\x5f\xe9\xde\xfb\x7d\x0f\xf3\xa1\xbb\xac\x36\x06\x42\x8d\xf8\xc4\x62\x0d\x9b\x1c\xb8\x24\x94\x53\x43\x43\xa7\x4b\x27\x49\xe2\xc6\x51\x90\xa9\x20\x6f\x30\x56\xdd\x3e\xfa\xbd\x83\xa1\x3d\x48\xcd\x31\x0b\xaa\xc4\x06\x5e\x2b\x59\x57\x11\x52\x92\xd3\x45\xd4\x4e\xb0\x62\x78\xc6\x71\x46\xf9\x22\x9a\xcf\xe7\xfe\xe8\xb5\x00\xcc\xb6\x02\xd3\x66\x12\x0d\xe1\xec\xc9\x4d\x0e\x25\xd7\x02\x01\x10\x97\x6e\xe6\x76\x3e\x44\x92\xc4\xb0\xae\xf4\xa4\xfd\xe9\xd5\x72\x29\x09\xe6\x68\x85\x09\x8d\x10\x23\xbb\x5c\xff\x61\xe5\x91\xad\x11\x26\x08\x7d\x58\x44\xb3\x73\x8f\x83\x40\xb7\x90\xeb\x10\x08\xa7\x24\xdb\x82\xaf\xad\x7b\xea\xca\x8a\x9a\xd6\x30\x0c\x34\xf3\xcf\xb6\x9e\x64\x5e\x97\x54\xf8\x83\xf7\xd8\xdc\x76\x9a\x9d\x7e\x9f\x85\xad\xa6\xae\x7e\x9f\x4c\x64\xce\xa5\x06\xa0\x04\x1b\x0c\x4b\xd1\x25\xeb\x1c\xf5\xf7\xe5\xd2\xd9\xa5\x89\xae\xb0\x68\x14\x05\x23\x84\x0a\xa8\x16\x55\x83\xe2\xff\x86\x95\x54\xff\x92\xc4\xd6\x20\xdd\x73\x68\x8a\x77\xfd\x65\x1a\x66\x78\x9b\xe1\x7e\x96\xec\x59\x46\x7b\xea\xb9\x78\xb7\x3b\x74\x6e\xd7\xc6\x12\x60\x8f\x61\x08\x7f\x25\x55\xd9\xab\x8c\xe0\x09\xab\x6b\xcf\x64\x68\x62\xfb\xa8\x5d\x0d\x02\x3d\x34\x52\xd7\x31\xa2\xb0\xd9\xc3\x6e\x35\x99\x89\xda\xd6\xf7\x33\x34\x58\x3b\x1f\x78\x61\xa2\xaa\x4d\x9b\x79\xdb\x56\xa2\x5e\xe0\xd6\x53\x93\x05\x1f\x05\x4e\x32\xe0\xb0\x39\x0f\xda\x55\xbf\x11\x85\xf8\xbf\x0a\x91\x7a\x80\xe2\xc6\xa3\x90\x6e\xfe\x76\xea\x67\x60\x12\x70\xb3\xd9\x3e\x32\x8a\xaa\x8b\x34\x80\xe5\xe5\x03\xdf\x95\xf7\x54\x50\x5e\xcd\x32\x2e\xf3\xbb\x28\xfd\x54\x50\x81\x38\x5d\x41\x50\x89\x7e\x3a\x43\x70\x61\xa0\xb6\xf0\xe1\x17\xbc\xa0\x7b\xc6\x39\xca\x28\xaa\x35\x25\xf3\x24\xae\xa6\xce\xd6\xf9\xf2\xe6\xcf\xd5\x4a\x53\x33\x9e\xb1\x73\xb4\xbc\x41\x8d\xd1\x34\x79\x0b\x62\x3e\xca\xdd\x4e\x37\x2d\xd2\xbc\xc0\x42\x50\x7e\xc5\xf4\x28\xd2\xcb\xc6\x64\xc6\xc1\x66\x04\xa8\x86\x8b\x23\x37\xe3\xd8\x7a\x51\x06\xd8\x02\xdd\x87\xa5\xd3\xca\xca\x31\x86\xde\x63\x73\x46\x10\xd6\x28\x94\x08\x5c\x52\x0b\x22\x14\x5a\xb6\x10\x4c\xf5\x00\xb9\x65\x6a\xce\x39\xda\x60\x5e\xc3\xae\x58\x8e\xd7\x48\x06\x88\xe2\x06\xd2\x73\x0e\xeb\x20\xc2\x15\xc5\x1b\x8a\x32\x8e\xc5\x9d\x5b\x5d\x78\x76\xdb\xa5\x69\x74\x0a\x12\x60\x8f\x04\x65\x5b\x67\x70\x25\x6f\xf0\xa7\x8b\x6b\xa4\x2b\x9a\xeb\xb7\xf3\x81\xcb\x6b\x09\x17\x9a\x29\x30\x9c\xa5\x82\x69\xd4\x42\x28\x2d\x5f\x81\xa6\x69\x6c\x1d\xe0\x0d\x66\xdc\x51\x3a\x1b\x73\x2b\x6b\x85\x14\x5d\x5b\xca\x38\xc0\x75\xa8\x52\x92\x38\xec\x9c\x4f\x34\xdd\x95\x84\x55\xa9\xbd\xd7\x52\x55\x73\x38\x2e\xae\x7c\x2d\xb1\x0a\xa8\x07\x03\x0e\x4c\x95\x92\xf0\x1c\x34\x7c\x37\x72\xad\xbe\xbf\x8c\x17\xf1\x80\x7d\x17\x59\xea\x2e\xaf\x3d\x77\xd2\x73\x3c\x57\x8a\x95\x58\x6d\x43\x86\x51\x57\x04\xf7\xa9\xd2\xad\xdd\x64\xbb\x9d\x6b\xcb\xb4\xfb\x71\x02\x38\xdd\xf0\x05\xf4\x63\x47\x67\x8e\x04\xe4\xfb\x10\x90\x1e\x65\xfc\x71\xac\xa3\xa1\x3e\x63\x6d\xb8\x79\x0d\x7b\x3d\xeb\xf0\x51\x06\x6d\xb8\x15\x4f\x7b\xbb\x1c\x79\xd4\x28\xa6\x23\x8f\x3a\xf2\xa8\x23\x8f\x7a\x25\x8f\x3a\xb3\x58\x0e\x51\xa9\x71\x26\x45\x68\x45\x05\x61\x62\x8d\xea\x0a\x70\x04\x8c\xe9\x0c\xc1\xf1\x30\x56\x83\x7d\x20\xb7\x67\x23\x84\xeb\x48\xb0\x26\x20\x58\xc1\x27\x9c\x6f\x4f\xb0\xc4\xee\x33\xdd\x91\x61\x7d\x1f\x86\x65\x77\x16\xca\xaa\xf9\x16\x6a\xab\xd9\x7e\xee\xd1\xff\x8e\x8f\x3d\xb0\x88\x0b\x42\xd4\x01\xde\x65\xd5\x23\x1d\xfb\x05\x95\xe4\xc6\x0f\x1a\xb9\xe2\x6d\x3e\x36\x07\x15\xb0\xa6\xe6\x06\x0b\x22\xcb\x36\xde\xa9\xd0\x50\x05\x6b\x2a\xa8\xc2\xfb\xbe\xc9\xba\xe8\x2f\xa3\x7d\x0d\xca\xe0\xda\x70\x1b\xe0\xa4\x93\xd3\xbe\xdb\xc3\xbc\xef\x76\x2a\xe2\x77\x3b\x64\x7e\x7a\xee\xa5\xd3\x62\x12\xf7\x77\x87\x30\x5d\x37\xea\xd7\x63\xea\xe2\xf4\x30\x79\xe9\xb4\x98\x56\x97\xc2\x7c\xac\xc6\x20\xfd\x06\x5a\x74\x5a\x57\x6f\xa7\x60\x65\x3e\x54\x0f\x55\x2b\x9c\x1e\xd4\x52\xde\x8b\xc3\xb0\x08\x58\x4c\x06\xac\x09\xf7\x08\x9a\x13\xff\x97\x5e\x3f\xf4\xf1\xe5\xe3\x2b\x5f\x3e\xf4\x37\x7c\xf5\xf8\x61\x9f\x0d\xfc\xfd\x0d\x4c\x83\x69\x4b\x85\xc9\xe4\xd7\xc8\x01\x60\x17\x4e\x3b\xc9\x25\xf2\x18\x98\x17\x3e\x03\xd8\x91\xd3\x3f\xf9\xd1\xb4\xfb\x9b\xb8\x7e\x35\xb1\xff\x27\x00\x00\xff\xff\x44\xfc\xc3\x0d\xbc\x21\x00\x00")

func partialsApplicationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsApplicationHtml,
		"partials/application.html",
	)
}

func partialsApplicationHtml() (*asset, error) {
	bytes, err := partialsApplicationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/application.html", size: 8636, mode: os.FileMode(420), modTime: time.Unix(1466838254, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsApplicationsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xdd\x8a\xdb\x3a\x10\xbe\xcf\x53\x08\x1d\x38\x7b\xce\x45\x62\x0a\x7b\xd5\xda\x86\xb2\xdd\x8b\x42\xbb\x37\xa5\x0f\x30\xb6\x94\x58\x54\x96\x8c\x2c\x87\x0d\x21\xef\xde\x19\xf9\x27\x72\xe2\xee\x76\x2f\x5a\x4a\xd9\x40\x62\x49\x33\x9a\x99\x6f\x7e\xbe\x38\x35\xbb\xb5\x32\xa5\xee\x84\x64\xad\x2b\x33\x7e\xd3\x80\xf3\x0a\x74\x9b\x18\xd8\x17\xe0\x36\x95\xaf\xf5\x0d\xcf\xd3\xe4\xac\x99\xaf\x56\xa9\x50\x7b\x56\x6a\x68\xdb\x8c\x97\xd6\x78\x50\x46\x3a\x9e\xaf\x18\x4b\xad\x1e\x05\x85\x93\x20\x4a\xd7\xd5\x45\x90\xd0\x27\xd5\x6a\x94\x42\xe9\xd5\x5e\xf2\xfc\x7d\xd3\x68\x55\x82\x57\xd6\xb4\x69\xa2\x55\x30\x92\x58\xdd\x5f\xa1\x8d\x87\x42\xcb\xf1\x5a\xbf\x09\xbf\xeb\xca\xee\x07\xaf\xa4\x55\xa1\xb7\xc9\x8f\xaf\xc8\xf0\xfd\xd7\x8f\x69\x82\xcb\xe8\xf4\x01\x6a\x79\x71\x36\x99\x96\x8f\x7e\xed\xd4\xae\xf2\x18\x55\x39\x04\x34\x6a\xd2\x6a\x72\x90\xfa\xc2\x8a\xc3\xd9\x84\x63\x98\x1d\x27\x1b\x09\x1e\x81\x35\x0d\x53\x86\xe1\xa3\x9d\x70\x93\x92\xc8\x8f\x47\x3a\xdd\x40\x08\x8c\x9d\x4e\x68\x53\x2c\x6a\x18\x0c\x72\x49\xbe\x14\xe9\x24\x47\x0d\x98\x52\xef\x0d\xc3\xef\xba\xad\xc3\x43\xc8\x2d\x74\xda\x73\x56\x39\xb9\xcd\x78\xf2\x4f\x02\x51\xd6\x93\xe3\xf1\x1c\xd6\xe9\xc4\xf3\x07\x2b\x24\x42\x87\x99\xed\xa2\xf3\xde\x9a\xe7\x1c\x60\x1e\x4a\x34\xfc\x2d\xe3\x52\x28\x1f\xd5\xf6\x3f\x34\xff\x3f\xcf\xef\xf1\x34\x4d\x7a\x5b\x2f\x30\x0f\x66\x87\x95\x8e\xac\x0b\xa9\xa5\x97\xd7\xf6\x3f\x84\xf3\x6b\x0f\x71\x2a\x71\xed\xa6\xa2\x8e\x85\xc4\x25\xf5\x14\xf6\x36\xae\xa3\xee\x26\xf7\x3b\x67\xbb\x86\x33\x67\xb5\xcc\xf8\xb0\x01\xa7\x60\xad\xa1\x90\x3a\xe3\x9b\xcd\x66\xec\xc2\x01\x86\x3f\x34\xa8\xda\x6f\xf8\x25\xa8\x85\x64\x95\x38\x2a\x73\x38\x88\xe5\x2e\x1c\xb2\xa8\x54\x31\xae\x34\xc1\x28\xf3\xd5\xf0\x98\x4d\x64\x6d\x05\x68\xb6\x05\x21\x39\x53\xe2\xaa\x14\x9f\x49\xcc\x69\x86\x94\x11\xf2\x31\xe3\xeb\x37\x23\x38\x81\xa3\x6f\x77\x31\x3a\x2d\x45\x71\x40\x93\x87\x70\xeb\x13\x1d\xf5\x73\x7e\xe9\x6f\x3d\xde\x1d\x2c\xd9\xb2\xab\xa5\x19\x1b\xf4\x5a\x9d\x68\xe3\x2c\x5f\xd2\xa0\x79\x9b\xe6\xfb\xd9\xec\x96\xda\xb6\x88\x57\x80\x07\x0c\xa5\xad\xd5\x64\x68\x5e\xac\xbb\xa0\x97\xa7\x6d\x03\xa6\x17\x54\x4a\x08\x69\x70\xaa\x5c\x87\x82\x7f\xbd\xaa\x65\xfb\x2e\x4d\x48\x21\x5f\xe8\xa4\xea\x76\x1e\xa6\x57\x5e\x0f\x89\x9e\x67\x89\x7a\x9d\x5d\xcf\x7c\x75\x7b\x6e\xc4\x50\xbb\x1f\xe1\xa7\xd6\x8c\xd1\x6f\xad\xab\x67\x33\x13\xdd\x20\xd9\xd0\xa7\xb1\x0a\x31\x2e\x05\xc3\x50\x9e\x71\xa2\x15\x1e\xd3\x36\x96\xaa\x4f\x0b\x0f\xbc\xf8\x16\xf9\x97\x76\x17\x16\x94\x69\x3a\x3f\x24\x9d\x98\x87\xcf\x9c\x0e\x76\xfa\x04\xf4\x1e\xb0\xaf\x11\x01\x25\x7b\x24\xb3\x39\x4d\xc5\xb0\x69\x1b\x03\x7b\x26\x27\x5b\x6b\xfd\xbc\x27\x22\x95\xa6\xd3\x88\x47\x6e\x31\x58\x22\xc8\x88\x35\x14\xb2\x9e\x74\xce\xe2\x4d\x2c\x48\x58\x85\x5a\xcc\x03\x79\xd1\xf0\x2e\x35\x5a\x1e\x9a\x6b\xa1\x67\x7e\xc6\x72\xe3\x54\x0d\xee\x10\xd3\x42\xd7\x08\x58\x62\xb9\x2f\xb0\xc7\x3f\xc4\x8a\xf0\xb5\x97\xde\x22\x50\xd3\xf2\x05\x5c\xd1\x33\xd1\x2b\x45\xfc\x1e\x8a\x58\xa2\xf8\x3f\x93\x1f\xfa\xb7\xa9\x5f\xc3\x10\x3d\x39\x3e\xc5\x11\xaf\x64\x77\xa5\xf2\xd7\x91\xdd\xf5\x3b\x50\x4f\x76\x4f\xbf\x06\x5d\xa4\x71\x99\xf2\xbe\x07\x00\x00\xff\xff\x01\x8c\x69\x05\xe7\x0c\x00\x00")

func partialsApplicationsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsApplicationsHtml,
		"partials/applications.html",
	)
}

func partialsApplicationsHtml() (*asset, error) {
	bytes, err := partialsApplicationsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/applications.html", size: 3303, mode: os.FileMode(420), modTime: time.Unix(1466837429, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsChannel_listHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xcd\x6e\xdb\x38\x10\xbe\xfb\x29\x08\x06\xd8\x24\xc0\xca\xc2\x62\x03\x2c\xb0\x2b\x09\x58\xa4\x2d\x7a\x48\x4f\x7d\x02\x4a\x1c\x5b\x44\x28\x52\xa5\x28\x23\x4e\x90\x77\xef\x90\xfa\xa3\x14\xb9\x69\x80\xa6\x27\x1f\x6c\x53\x9c\xe1\x70\xbe\x6f\x66\x3e\x39\x51\xfb\x48\xa8\x42\xb6\x1c\x48\x63\x8a\x94\x5e\xd6\xcc\x58\xc1\x64\x13\x2b\x76\xc8\x99\xd9\x96\xb6\x92\x97\x34\x4b\xe2\xc9\x33\xdb\x6c\x12\x2e\x0e\xa4\x90\xac\x69\x52\x5a\x68\x65\x99\x50\x60\x68\xb6\x21\x24\xd1\x72\x30\xe4\x06\x18\x2f\x4c\x5b\xe5\xde\x82\x36\x29\xb2\x84\x91\xd2\xc0\x2e\xa5\xf1\x45\x5c\x94\x4c\x29\x90\x0d\xcd\x6e\xbb\x15\x91\xa2\xb1\x4d\x12\x33\xbc\x0f\x7d\x09\x19\x8e\x0d\x21\x59\x61\xc5\x01\x68\xf6\xf4\x44\xfa\xc3\x77\x78\x62\xab\x58\x05\xe4\xf9\xd9\x1f\x72\x39\xc4\x5a\x62\x92\xb8\xb0\x2c\x97\x30\x1c\xee\x1e\xfc\x77\x54\xea\x43\x9f\xb0\xf3\x2a\x31\xd1\x6e\xed\x9f\xb2\x8b\x24\xc6\xef\x60\xe3\x93\x81\x6f\x2d\xa8\xe2\x48\xae\x3e\x3f\x5e\x2f\xac\x63\x7c\x78\xb0\x91\x11\xfb\xd2\xd2\xec\x7f\x4c\x54\xab\x66\xf2\x74\xab\xf1\x96\xc4\xe6\x9a\x1f\xa7\x10\x86\x20\xbb\x06\x6a\x60\x16\xf9\xec\xb9\x10\x8a\x4c\x04\xf5\xae\xce\x99\x07\xe8\xb7\x83\xb3\x03\x6f\xf9\x49\xb7\xdd\x98\xff\x8a\xe3\x5a\xfe\xa3\x1d\x3d\xd8\x58\x50\xab\x08\x7e\xa2\xa6\xf2\x3f\x1c\x76\xac\x95\x96\xba\xe4\x0b\x29\x8a\xfb\x94\x02\x17\xb6\xaf\xe5\x55\x7f\xf7\x35\xcd\x3e\xe2\xae\x2b\x6a\x18\x34\x6f\xad\xd5\xea\x54\x64\xa6\xf6\x58\x9e\x20\x30\x07\x09\x16\x5e\x86\xfe\xe0\xf7\x93\xb8\x0b\x17\xc0\x0a\x40\xe2\xda\x8c\x45\x18\x88\xc7\xa5\x6b\x84\xae\x4d\x82\x6e\x76\xd7\xef\x8d\x6e\x6b\x4a\x8c\x96\x90\xd2\xfe\x81\x19\xc1\x22\xc9\x72\x90\x29\xdd\x6e\xb7\x43\xeb\xf4\x30\xec\xb1\x46\xd7\xee\x81\x2e\x41\xad\xf0\x54\xe0\x68\x4c\x70\x10\xc7\xad\xdf\x18\xea\x15\xe2\x49\x62\xcc\x2e\xdb\xf4\x3f\xb3\xc9\xab\x34\x67\x92\xec\x18\x07\x4a\x04\x5f\x44\xfd\xe2\x8c\xd4\xb5\xbb\x50\x1c\x1e\x52\x1a\xfd\x35\x40\xe2\x38\xe0\x7a\x1f\x62\x92\xc0\xf3\x23\x06\x3c\xfa\x53\x77\x6e\xab\x9b\xe6\xe5\x6d\xd1\x70\xb6\x8f\xa4\x8b\xb6\x02\x35\x34\xcc\x4b\x77\x27\x0e\x93\x7d\xcd\xc3\x4d\xc5\x38\x8a\xaf\x72\x5a\x48\xdd\x20\x5a\xce\x2c\xc3\x54\x9a\x4a\x8c\x81\xe6\x25\xba\xf5\x7e\x59\xd2\xd4\x4c\x75\x86\x52\x70\x0e\x0a\xbb\xdc\xb4\x68\xf8\xc3\x8a\x0a\x9a\xff\x92\xd8\x39\x64\x2b\xfd\x53\xde\xcc\xd3\xb4\xc2\xca\x9e\xe6\x39\x4b\xcb\xca\x95\x37\x53\xdf\xf9\x92\x9d\x02\xee\x3a\x31\x84\xbd\xd3\xa6\x9a\x8d\x48\x70\xc2\xd9\xfa\xb6\x0c\x5d\x9c\x36\xba\x2c\x08\xda\x53\xea\x54\x90\x86\xaa\x8c\x35\xea\xf8\x98\x04\xf6\xe2\x5f\x14\x49\xb7\xb5\x08\x23\x54\xdd\xda\x9e\x72\x85\x8a\xed\xa6\x2f\xbc\xbb\x0f\xd7\x11\xd0\x5d\x84\xdd\x8c\x40\x1c\xd9\x0b\x31\x5a\xa6\x58\x0f\x91\x4a\x90\x75\x94\x4b\x5d\xdc\x4f\x09\xf9\xe6\x24\x57\x7f\x93\x88\xfc\xf3\x27\x79\x04\xa3\xa3\x9c\x35\xc0\x3b\x83\x50\x7b\x54\xdb\x7a\x46\x4b\xc8\xea\x2f\xe7\x69\x2e\xf4\xef\x49\xd6\x28\xc9\xf4\x07\xe8\x92\x38\xec\x8a\x57\x1a\x6a\xa7\xb5\x9d\x4f\x52\xe0\x52\xb7\x12\x41\xc2\x0e\xf3\x76\x32\x1f\x28\xac\xc0\x97\x31\x18\xa3\x8d\x7f\xad\xfa\x95\x7f\x4b\xcc\x13\x79\x93\xd0\xad\x8d\x67\xe6\x47\x72\x65\xd2\x7e\x26\x72\x6d\x44\xc5\xcc\xf1\xb4\x84\x4e\x6f\x84\xd3\x4a\xba\xa0\x70\x5c\xbe\x41\x61\x83\xf7\xdb\x59\x5f\x7f\x8f\xbe\xba\x3f\x0f\x43\x35\xc9\x89\x7f\x3e\x67\xcd\x3d\x6b\xee\x59\x73\xdf\x5f\x73\xdb\x9a\xaf\x6a\xee\x57\x76\xe8\x14\x77\x0f\xcd\xdb\x15\xf7\x7b\x00\x00\x00\xff\xff\x05\xf7\xcb\xa4\x85\x0e\x00\x00")

func partialsChannel_listHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsChannel_listHtml,
		"partials/channel_list.html",
	)
}

func partialsChannel_listHtml() (*asset, error) {
	bytes, err := partialsChannel_listHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/channel_list.html", size: 3717, mode: os.FileMode(420), modTime: time.Unix(1463414765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsChannel_listsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xcd\x8a\xdb\x30\x10\xbe\xe7\x29\x84\x0a\xdd\xf6\xe0\x98\xc2\x9e\x5a\xdb\x50\xd2\xde\xb6\xbd\xf4\x09\x64\x6b\x12\x8b\xca\x92\x91\xe4\xb0\x61\xd9\x77\xef\x48\xfe\x93\xbd\x5e\xb6\xa1\xd0\x53\x02\x89\x25\xcf\xe8\x9b\xf9\x46\x33\x5f\x32\x75\x4a\x84\xaa\x64\xc7\x81\x58\x53\xe5\xf4\xae\x65\xc6\x09\x26\x6d\xaa\xd8\xb9\x64\x66\x5f\xbb\x46\xde\xd1\x22\x4b\x67\xcf\x62\xb7\xcb\xb8\x38\x93\x4a\x32\x6b\x73\x5a\x69\xe5\x98\x50\x60\x68\xb1\x23\x24\xd3\x72\x34\x94\x06\x18\xaf\x4c\xd7\x94\xc1\xe2\x3f\x99\x14\xa3\x95\x55\x4e\x9c\x81\x16\x87\x9a\x29\x05\x92\x48\x61\x9d\xcd\x52\x29\x02\x4a\xaa\x25\x86\xc1\x85\x63\xa5\x84\xf1\x4c\xbf\x09\xbf\x49\xad\xcf\x43\x48\xef\x55\x63\xa8\x29\x88\xab\x8b\x9f\xac\x81\x2c\xc5\xc5\xfc\x6e\x02\x81\x47\x97\x18\x71\xaa\x1d\x2d\xbe\x62\x12\x5a\xd9\xd9\xd3\xaf\x26\xa8\xcc\x95\x9a\x5f\x66\x08\x43\xb0\x08\x06\x5a\x60\x0e\x69\xf7\x79\x3f\x60\xda\x44\x28\x12\x6d\xed\x44\xd7\x1f\xe2\xc5\xd3\x53\x6c\xdd\x2b\x4c\x8d\x3c\x3f\x63\x24\xbe\xf0\xdb\xca\x6f\xb2\x07\x1f\x36\x55\xd6\x29\x82\xdf\xc4\x36\xe1\xc1\xe1\xc8\x3a\xe9\x28\xa9\x0d\x1c\x73\x9a\xbe\x4b\x87\x78\x36\x5d\xc5\x16\x1c\x23\x4f\x35\x47\xde\xec\xda\x10\x58\x81\x4a\x8a\xea\x77\x4e\x81\x0b\xe7\x41\x3f\x44\x01\x3e\xd2\xe2\x3b\xbe\x7e\x89\x5b\x76\xce\x69\xf5\x1a\x38\x53\x27\xbc\xcb\x08\x9b\x83\x04\x07\x1b\xe8\xdf\x82\x21\x4b\x7b\xbc\xa8\x7e\x51\x35\x71\x6d\xa6\xdb\x1c\x6f\x10\x97\xbe\x6d\xfa\xa6\x8a\xba\xd7\xc7\x3f\x19\xdd\xb5\x94\x18\x2d\x21\xa7\xc3\x86\x19\xc1\x12\xc9\x4a\x90\x39\xdd\xef\xf7\x63\xa3\x0d\x3c\xdc\xa5\x45\xd7\x7e\x43\xd7\xac\x36\x6a\x55\xe1\x28\x0c\x7c\x90\xc4\x21\xec\xc6\x8b\x49\x7c\xe7\xc7\x8c\xb2\x14\xf3\x2b\x76\xc3\x63\x31\x6b\x8d\xe6\x4c\x92\x23\xe3\x40\x89\xe0\x23\xee\x61\x2e\xd1\x0f\xef\x40\xfd\x88\x08\xc5\xe1\x31\xa7\xc9\xa7\x91\x18\xc7\xb1\xd6\xa7\x98\x99\x04\x5e\x5e\x10\xf4\x12\x4e\x3d\xf8\x57\xfd\x0c\xaf\x23\x26\xe3\xd9\x01\x49\x57\x5d\x03\x6a\xec\xcf\x97\xee\x5e\x12\x66\xfb\x96\x87\x1f\xb2\x69\x7c\xdf\xac\x6c\x25\xb5\x45\xc6\x9c\x39\x86\xa9\xd8\x46\x4c\x40\xcb\x8b\x3a\x04\xbf\x22\xb3\x2d\x53\xbd\xa1\x16\x9c\x83\xc2\xa1\x32\x1d\x1a\xde\x3b\xd1\x80\xfd\x92\xa5\xde\xa1\xd8\xe8\xa2\xfa\x7e\x99\xa6\x13\x4e\x0e\xa5\x5e\x56\x69\xf3\x0a\xeb\xfb\xb9\x05\xc3\xdd\xbd\xc6\xde\x37\x65\xcc\xfd\xa8\x4d\x13\x0f\x4c\x7c\xc2\xdb\x86\x0e\x5d\xcd\x54\x20\x4d\xd0\x9e\x53\xaf\x29\x34\x16\x64\xbc\xa8\xbe\x28\x34\x48\xe1\x67\x14\x56\xbf\x5b\x21\x08\xd5\x76\x6e\x28\xb9\x97\x1d\xba\x08\x3a\xe0\xf4\xf4\xfb\x08\xd8\xd1\xc8\xc0\x97\x7a\xad\x68\x8b\xe4\x16\xf4\xfd\x36\x26\xf8\x46\x6d\x8e\x5a\xbb\x65\x67\x44\x2e\x6d\x27\x91\x17\x1c\x31\x69\xaf\x92\x91\x70\x08\x14\x3e\x30\x46\xe3\x49\xd4\xbc\xb0\x0a\x22\xbb\x4c\xe4\xaa\xf1\xdd\x6a\xb7\x22\xb4\xd8\x46\xe7\xfc\x0d\x72\x6b\x44\xc3\xcc\xe5\x15\x61\x58\x0a\xdd\x1b\x1a\xb1\x2a\xe4\xb4\xbc\x42\x3b\xbc\x7e\xdf\x94\xe3\xbf\x2b\x87\xff\x7f\xbc\xe9\xc6\x4d\x37\xfe\x4d\x37\xba\x96\x6f\xeb\xc6\x2f\x76\xee\x55\xe3\x04\xf6\x6a\xc1\xf8\x13\x00\x00\xff\xff\x97\xd5\x1e\xe9\x0f\x0c\x00\x00")

func partialsChannel_listsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsChannel_listsHtml,
		"partials/channel_lists.html",
	)
}

func partialsChannel_listsHtml() (*asset, error) {
	bytes, err := partialsChannel_listsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/channel_lists.html", size: 3087, mode: os.FileMode(420), modTime: time.Unix(1463414765, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsNavbarHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x51\x41\x4f\xf3\x30\x0c\xbd\xef\x57\x44\xd9\x61\xa7\x2a\xf7\x4f\x6d\xa5\x4f\x9c\x90\x38\x20\xe0\x0f\x78\x8d\xdb\x5a\xb2\xd2\x2a\x4d\x27\x26\xc4\x7f\xc7\x5b\x93\x30\x56\x10\x70\xe0\x14\xe7\xf9\xd9\xcf\xcf\x2e\x1d\x1c\x54\xc3\x30\x4d\x95\x96\x70\x0f\x5e\x2d\x4f\x61\xb1\x85\x99\x83\xae\x37\x4a\x95\x96\x32\xab\x19\x5c\x00\x72\xe8\x8b\x96\x67\xb2\xe7\xfc\x47\x46\x6c\xd0\x23\x58\xf4\x31\x2f\x8c\xfd\x1c\xc2\xe0\x54\x38\x8e\x58\xe9\xe5\xa3\xaf\x4a\xc2\xd0\x75\x8c\xaa\x19\x98\x61\x9c\xd0\x6a\x65\x21\x40\x84\x4f\xd2\x0b\x9e\x60\xf0\x1d\x86\x4a\x6f\x63\xf5\x7b\x1a\x3c\x41\x81\xcf\x23\x38\x8b\xb6\xd2\x2d\xb0\xa0\x79\x90\x49\xf0\x24\x3c\xf9\x62\x70\x7c\xd4\xf5\xd3\x22\x2d\xad\xa8\x83\x40\x83\x2b\xcd\x89\xf7\x69\x11\xc9\x0e\x0a\x51\xd4\xf5\x9f\x91\xcc\xb2\xa0\xfc\x87\xab\x4d\xed\xbd\x78\xd3\xaa\xf7\xd8\x56\xda\xe8\xfa\x6e\x78\x00\xf5\x88\xfe\x80\xbe\x34\x10\x6f\x62\xe4\x28\xeb\xf3\xa4\x35\xa9\xd5\xda\xc8\xe6\xfe\x19\xcc\x13\xcc\x7c\x31\x42\xaa\x95\x27\x33\x84\xc3\xa4\x5c\x57\x44\xda\x0b\x34\x81\x0e\xf8\x4f\x8d\xd0\xa1\xaa\x2a\xb5\x83\x71\x64\x6a\xce\xdb\x9d\x76\xaf\xe2\x19\x92\x81\xad\xb9\xcc\xe9\xfa\xff\xc5\xef\xe4\xa7\x34\x4c\x3f\xd7\x69\x7a\x70\x0e\x79\xa5\x91\x70\x5d\xdf\xc4\xe8\xba\x77\x69\x66\xfe\xd6\x71\x0a\x3d\x75\x7d\xf8\x95\x7d\x5a\xbb\x26\x31\x7b\x7f\xfb\xf5\x1c\xf9\x88\x31\x28\x8d\xa8\xd7\x9b\xb7\x00\x00\x00\xff\xff\x6b\x56\xe8\x73\xb8\x03\x00\x00")

func partialsNavbarHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsNavbarHtml,
		"partials/navbar.html",
	)
}

func partialsNavbarHtml() (*asset, error) {
	bytes, err := partialsNavbarHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/navbar.html", size: 952, mode: os.FileMode(420), modTime: time.Unix(1466836166, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"js/app.js": jsAppJs,
	"partials/api.html": partialsApiHtml,
	"partials/application.html": partialsApplicationHtml,
	"partials/applications.html": partialsApplicationsHtml,
	"partials/channel_list.html": partialsChannel_listHtml,
	"partials/channel_lists.html": partialsChannel_listsHtml,
	"partials/navbar.html": partialsNavbarHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"js": &bintree{nil, map[string]*bintree{
		"app.js": &bintree{jsAppJs, map[string]*bintree{}},
	}},
	"partials": &bintree{nil, map[string]*bintree{
		"api.html": &bintree{partialsApiHtml, map[string]*bintree{}},
		"application.html": &bintree{partialsApplicationHtml, map[string]*bintree{}},
		"applications.html": &bintree{partialsApplicationsHtml, map[string]*bintree{}},
		"channel_list.html": &bintree{partialsChannel_listHtml, map[string]*bintree{}},
		"channel_lists.html": &bintree{partialsChannel_listsHtml, map[string]*bintree{}},
		"navbar.html": &bintree{partialsNavbarHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

