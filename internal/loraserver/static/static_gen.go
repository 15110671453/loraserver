// Code generated by go-bindata.
// sources:
// ../../static/index.html
// ../../static/js/app.js
// ../../static/partials/api.html
// ../../static/partials/applications.html
// ../../static/partials/channel_list.html
// ../../static/partials/channel_lists.html
// ../../static/partials/navbar.html
// ../../static/partials/nodes.html
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x5f\x53\x9b\x4e\x14\x7d\xf7\x53\xf0\xdb\x57\x7f\x40\x10\x63\x62\x07\x9c\x89\x86\xd6\x66\x12\x13\x8d\x25\xea\xdb\x06\x2e\xb0\x64\xd9\x85\xdd\x25\x21\x7e\xfa\x2e\x49\xad\xf6\x9f\xb5\x9d\xe9\x13\x7b\xef\x9e\xfb\xe7\x1c\xe0\x78\xff\x0d\xa7\x17\xb7\xf7\xb3\xc0\xc8\x54\x41\xcf\x0e\xbc\xf6\x61\x50\xcc\x52\x1f\x01\x43\x06\x4b\x4d\x5c\x96\x3e\xa2\x5c\x60\x09\x62\x0d\x02\x9d\x1d\x18\x86\x97\x01\x8e\xdb\x83\x3e\x16\xa0\xb0\x11\x65\x58\x48\x50\x3e\xaa\x55\x62\xf6\xd1\xcb\xab\x4c\xa9\xd2\x84\xaa\x26\x6b\x1f\xdd\x99\x9f\x06\xe6\x05\x2f\x4a\xac\xc8\x92\x02\x32\x22\xce\x14\x30\x5d\xf7\x31\xf0\x21\x4e\xe1\x9b\x4a\x86\x0b\xf0\xd1\x9a\xc0\xa6\xe4\x42\xbd\x00\x6f\x48\xac\x32\x3f\x86\x35\x89\xc0\xdc\x05\xff\x1b\x84\x11\x45\x30\x35\x65\x84\x29\xf8\xce\x53\x23\x45\x14\x85\xb3\x31\xbf\xc1\xc6\x7c\xb7\xbf\x67\xef\x53\xfb\x6b\x4a\xd8\xca\x10\x40\x7d\x24\xd5\x96\x82\xcc\x00\xf4\xa0\x4c\x40\xe2\xa3\x76\x71\xf9\xce\xb6\x0b\xdc\x44\x31\xb3\x96\x9c\x2b\xa9\x04\x2e\xdb\x20\xe2\x85\xfd\x35\x61\xbb\x96\x6b\x9d\xd8\x91\x94\xcf\x39\xab\x20\x1a\x25\x25\xd2\x8b\x29\x48\x05\x51\x5b\x3d\x23\xc3\x6e\xff\xd8\x74\xaa\x7e\x71\x3b\x9a\x0e\xe6\x4d\x3f\x77\x06\xf5\x21\xee\x2e\x86\x21\x9b\x91\x23\xba\x7a\x9f\x6c\x36\xc1\x00\xf7\xb3\xe1\x30\xce\x1f\x68\x39\x86\xb4\xc9\xf2\x70\x12\x38\x49\x9a\x2f\x66\x1f\x8a\xd5\xa3\xec\x69\x25\x04\x97\x92\x0b\x92\x12\xe6\x23\xcc\x38\xdb\x16\xbc\x96\xe8\x5f\x93\x32\x55\x06\x05\xbc\x46\x2d\x19\x2f\x8e\xae\x3a\x0e\x9d\x54\x39\x5e\x9d\xaf\x1a\x97\xda\x93\xd3\x00\x67\xf5\xa6\x9c\x27\x70\xb5\x0e\x4f\xdc\x51\x17\x1e\x99\x5b\x3f\x3c\xe2\xf2\xb6\x53\xf7\x82\x7b\x79\x37\xc9\xaf\xc3\xc3\x4e\xc0\xba\xe2\x77\xd4\x64\x24\x48\xa9\x0c\x29\xa2\x67\x2a\x38\xc7\x8d\x95\x72\x9e\x52\xc0\x25\x91\x3b\x1a\x6d\xce\xa6\x64\x29\xed\xbc\xaa\x41\x6c\x6d\xc7\x72\x1c\xcb\xfd\x12\xed\x18\xe4\xba\xa9\x67\xef\x1b\xbe\xd2\xfd\xad\x42\xe5\xdf\xbf\xfc\xfc\xa7\x02\x75\x8a\xf9\x72\x34\x0c\x2e\xf5\xa7\x9a\x14\xf5\xf9\xf9\xf5\xec\x64\x70\x7c\x2d\x4a\x51\x75\xa7\x61\xb2\x70\x7b\xb3\x9b\x1b\x37\xef\x06\xe3\xaa\x91\xd2\xd9\x86\xd5\x54\x31\x28\xd9\x65\x38\x3b\xc5\xa3\x5e\x33\xff\xb5\x40\x6f\xe0\xf2\xba\x52\xfa\xa7\xaf\x29\x16\x9a\x88\x63\x75\xad\xce\x53\xfc\x27\x62\xfd\xd5\x00\x53\xf0\x5a\xc1\x5b\xc6\xe8\x4a\xed\x46\x3f\xa0\x3c\xfb\xc9\x8e\xbc\x25\x8f\xb7\xfb\x42\xc3\x8b\xc9\xba\xf5\xaf\xd6\x3f\x34\x5c\x47\x7b\xec\x1e\xa2\x6b\x5a\xc3\xfb\x1c\x00\x00\xff\xff\x78\x44\x55\x33\x00\x05\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 1280, mode: os.FileMode(420), modTime: time.Unix(1462818887, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsAppJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\xdf\x6f\xdb\x36\x10\x7e\xf7\x5f\xc1\xb9\x01\x28\x63\xae\xbc\x3e\xce\x41\x31\x74\xc9\x56\x04\xd8\x86\xa2\x6d\x9e\x82\x60\xd0\x24\xda\xd6\x20\x8b\x02\x49\x27\x08\x02\xff\xef\xbb\xa3\x7e\x51\x32\x6d\x93\x4e\x93\xaa\xdb\xf4\xe2\x48\x22\x8f\xdf\x7d\xbc\xbb\xef\xa8\xf6\x2e\x12\x24\xe3\x22\x92\x4c\xdc\x31\x41\xde\x92\x28\x5f\x6e\xb2\x48\x84\x6b\x9e\x6c\x32\x16\xd0\xf6\x25\x9d\x92\x9b\x11\x81\x8b\xe6\xcb\x8f\x7c\xa3\x18\x9d\x8e\xca\xfb\x76\xcc\x05\xcf\x95\xe0\x59\xc6\x84\xa4\xfa\xdd\xed\xe4\x7c\x34\x6a\xdf\x87\x31\xcf\x17\xe9\x32\xb8\x19\x9f\x15\x82\xdf\xa5\x09\x1b\x4f\xc9\x62\x93\xc7\x2a\xe5\x79\x50\x3f\x9b\x90\x47\x3d\x59\x30\xb5\x11\x39\xa9\x1f\x87\x09\x8b\xc1\x92\xe2\x22\xa0\x67\x2b\xa5\x0a\x44\x44\xcf\x12\x96\xb1\x65\x84\x70\x0c\x4b\xf5\xc3\xda\x14\x5e\xcd\xc3\x50\x14\x31\xb8\xda\x8c\x5e\x33\xb5\xe2\xc9\x94\x14\x91\x88\xe0\x6f\x00\x6f\x4e\xc3\x0b\x69\x4a\x22\x15\xc1\xac\xc7\x71\x39\x7c\x3c\x27\xf5\xbc\xb1\x9e\x28\xe1\xc9\x4d\x6b\xe2\x16\x9e\xa7\xc9\x98\xcc\xc9\x9b\xed\x79\xc7\x58\xed\x56\x03\xa7\xe0\x52\x05\x74\x06\xa8\xc0\x07\x5c\x66\x4a\x1e\xe9\x8a\x45\x09\xd2\x38\x7f\xa4\xc8\x2a\xcb\xd5\xeb\xcf\x0f\x05\xa3\x73\x42\xa3\xa2\xc8\xd2\x38\x42\xec\xb3\xbf\x25\xcf\xe9\x76\x3b\x69\x97\x30\x56\xeb\xaf\x64\x0c\xba\xad\x66\x6c\xf7\xed\x10\x3d\x13\xb8\xc9\x1f\x4a\xee\x61\xf7\xf5\xf0\x96\xe1\xce\xdb\x0e\xcd\x9d\x37\x61\xc7\xf5\xfb\x15\xcb\xc1\x53\xc3\x01\x09\x2e\x77\xb9\xc6\x4b\xb1\x75\x91\x01\xe0\x6b\x91\x81\xbf\x40\xaa\x4a\xa3\x4c\x76\xe6\x85\x2b\xb5\xce\x2a\x54\xe6\x15\x37\x21\x08\x33\xdf\xb5\x13\x7e\x4b\xa5\xba\x50\x22\xa3\x9d\x19\xdb\xc9\x51\x80\xb3\xb9\x71\x37\x48\xb4\x39\x4f\x98\x17\x8f\x7a\x82\x13\xa4\x3f\x60\xa4\x3f\x96\xd9\x1c\x7f\x06\x82\x28\x5e\x45\x79\xce\x32\x2f\x82\xaa\x39\x7f\x66\xb0\x90\x1b\xac\x8b\x72\x06\x22\x3b\x09\xdd\x6c\x8e\x6b\x9d\x8a\xd1\x17\xa2\x47\x22\xa4\x7e\x21\x9f\xba\x45\xfa\x87\xab\xe3\x10\xb8\x5a\x31\x71\x9f\x4a\x16\xec\xae\x2f\x58\x92\x0a\x16\xab\xcf\x1c\xac\x75\xeb\x49\xcf\x66\xaf\xe6\x8d\xba\x8a\x67\x08\xd6\x41\xf1\x33\x85\x0d\x54\x47\x5b\x9a\xcd\x48\x92\x4a\xa0\xe1\x81\xa0\xa0\x24\x3c\x96\x23\xeb\x8c\xb0\xf5\x3d\x68\x5c\xd7\xda\x25\x63\x5e\x60\x9e\xd4\x7a\xd6\xa9\xb1\x24\x28\xdf\x4f\x89\x7e\xdb\xa9\xb1\xfa\x45\x58\x44\x4b\x06\xb0\x29\xee\x52\xeb\xa7\x1e\x1d\x2e\x59\xad\x29\x93\x50\x6e\xe2\x98\x49\x19\x34\xd5\x1b\x45\xa6\xaf\x71\x95\x4d\xb0\x85\x54\xe0\x08\x83\xba\x8e\x5a\x80\xe3\xeb\x28\xc7\xb5\x4d\xe2\x5d\x7c\xb7\x14\x38\x2b\x0f\xa4\x56\x1f\x2d\xac\xed\xfd\x61\x86\xa6\xc4\x9c\x55\xdf\x1d\xe4\xcd\x88\x9b\x3e\x81\x40\x5d\x07\x71\xf8\x9e\xe9\xd4\xc6\x7c\xa0\x59\xba\x4e\x15\x68\xf1\x8f\x70\x01\x3a\xbe\x58\x48\x86\xf7\x3f\x6c\x1d\xd9\xee\x30\x5e\xd4\x8c\x87\x82\xc9\x4d\xa6\xba\xc4\xf7\xd1\xc7\x82\x41\xe6\x99\x0d\x0c\x58\xe8\xdb\x4f\x17\xf8\x94\xbc\x7d\x4b\xf2\x4d\x96\x59\x57\x0f\xe8\xab\xd2\xd4\xef\x3c\x89\x32\x08\x93\x35\xfe\x06\x93\x10\x2c\xd2\x55\x9a\x24\x2c\x0f\xff\x92\xe5\x53\xb3\xb9\xb2\x19\xd3\x06\x35\xdd\xe0\x42\xc6\xa3\x24\x98\x9c\xef\x0c\xda\xf6\x9e\x6d\x09\x14\x3e\x66\x83\x66\xdf\x80\x0b\x8d\x16\xa0\xa0\xbf\xee\x34\x97\x74\x10\xfd\x3e\x64\x42\x70\x71\x88\x96\x63\xf4\x20\x33\x8c\x5a\xbc\xd3\x1e\xd9\x89\x29\xf7\xad\x5a\x9a\xb4\x38\x1c\x28\x32\xdb\xba\x7e\x20\x6c\x8a\xe4\x78\x20\xec\xe1\xf2\x5a\xcf\xf5\xe6\xd2\x8f\x47\xe4\x10\x0a\xb5\x72\x64\x70\x97\x3d\x47\xe6\x7a\xed\x6f\x9f\x27\x6c\x7f\x1d\x12\x86\x04\xba\xf7\x15\x6b\x60\x4a\x30\xf2\xc0\x37\x44\x6e\xaa\x3f\xee\xa3\x5c\x11\xc5\x49\x65\x8a\x92\xef\x91\x38\x4c\xdd\x5f\xae\xaf\xe0\x86\xfe\x44\x27\xd6\x24\xb3\xb3\x7f\xa9\xcd\x94\xec\x57\x46\x9e\x16\xd0\xdf\x1d\x0f\xe8\x08\x4a\xb0\x32\xe6\xf8\x85\xb0\x77\x6e\x5b\x37\x04\xaa\x92\x59\xa2\x43\xa3\x00\x3b\xc6\x2d\x14\x61\xda\xad\xf3\x1d\x23\xa7\x14\xdf\x7d\xb5\xb7\x19\x69\x8d\x62\x97\x32\x49\x56\xa0\x17\x5c\x3c\x84\x4b\x1e\xbc\x7e\x33\x39\xdf\x65\x69\xf7\xdc\xd6\x97\x58\xdd\x19\x3b\x68\x6b\xa7\x2f\x7e\x59\x51\x6d\x77\x0a\x41\x7c\x59\x9d\xac\xb6\x49\xb3\xe0\x26\x92\x2d\x1a\xa3\xe1\x7d\x16\x50\x71\x6b\xff\x89\x02\x8e\xee\xd9\x0a\x12\x3e\x7f\x1e\x0d\x7f\x41\x09\xd7\x41\xd1\x68\xb7\x76\xf5\x7f\xf1\xb6\x88\xb7\x2d\x08\xfa\x34\x36\xb2\xed\x49\xe3\xbf\x44\xb7\xf7\xe5\x89\x97\x70\xa3\x11\xb0\x7d\xe7\xac\xdc\x9a\xf9\x46\xb2\x8d\xe9\x7e\x71\xfc\x6d\x4a\x76\xb5\x17\x12\xbc\x44\x71\xf0\x8b\xd7\x4f\xe5\x2c\xac\xbe\x3f\x3f\x5c\x6a\xce\x4e\x66\xb0\x56\x82\xbd\xa5\xb6\xbe\x90\x67\x63\xf0\x91\x50\x37\xac\xee\xdf\x88\x12\xec\xdc\x44\xbe\xfb\x85\xa3\xbe\xca\x7e\xae\x1a\x5c\xde\xec\x1f\xbc\xb8\xc8\xd5\x75\x01\xda\x73\x78\xc8\x25\xbf\xcf\x61\x90\x7d\xfb\x9d\x32\x12\x52\xba\xda\xc3\xaf\x76\xdc\x3b\x9c\xed\x65\x41\xfc\x64\x89\xb3\x9d\xcf\xf1\x7b\xa2\xac\x2d\x8e\xd2\x3d\xae\xfc\x2b\xa3\x95\xc6\x2f\x52\x1c\x89\x0f\x5f\x4b\xa6\x3e\x46\x79\xc2\xd7\x90\x57\xef\x92\x44\x9c\x44\xd9\xfb\x9e\x11\x24\x0f\xdd\x77\x4f\xcb\x5c\x62\x42\x54\x00\x0e\xf7\xd1\x4f\x13\x85\xfe\xd9\xc1\x45\x2e\x2d\xa7\x05\x4f\xe1\x34\xfa\xcf\x61\x9d\x13\x0c\x70\xf5\xe7\xac\xf2\xdf\x01\xec\xc7\x88\xaa\x57\x25\xfa\x8b\xb6\xc3\x71\xc2\xf6\x3d\xfb\x6b\x7e\xaa\x6b\xbe\xe2\x5b\x3f\xd3\x0d\xbb\xd3\xc7\x69\x66\x76\xc6\x3b\xe5\x45\xf7\x30\x99\x5b\xa7\x6f\xf8\x3a\xe4\x0f\x77\xe6\x96\x34\xcd\x7f\xec\x53\x59\x6a\x62\x4e\x6d\xfd\xf7\x12\x35\xa0\x53\x00\xd6\x8b\xe3\xe1\xb1\x3f\xd2\x35\xa7\x61\x9a\xf8\x57\x34\x23\xa4\x5d\x0b\xdb\x10\x22\xcf\xa5\x87\x38\x99\xd0\xa6\x81\xf0\x8a\xd3\xd3\xce\x56\xfe\xd1\xf9\xbc\xc7\x2c\xc7\x22\xe5\x73\xd0\x82\xc8\xcc\xa3\x35\x73\x3b\x64\x99\xfb\xd0\x9c\xb5\x7c\x63\xdb\xb2\x1d\xc3\x3e\x66\xe9\x9f\x03\x52\xed\xa7\xd4\xdf\x96\x4a\x53\xfd\x3f\x6e\x24\xbb\xca\x55\xb7\xb3\x43\xc7\x27\x27\x0b\xf4\x21\x7d\xde\x0f\x0a\x01\xfd\xca\x85\x01\xf1\x19\xe0\x9d\xd0\x3b\x54\x80\x3a\x99\x69\x4d\x4c\xaf\xe6\x61\x70\x8d\x43\x6c\xee\xe0\xd5\x25\xb8\xbb\xbb\xb1\x50\x0a\x2c\xda\xb4\xbb\x93\x6d\xb7\xf1\xf2\xcd\xc6\xa0\x1b\x0d\x97\x58\xb2\x67\x06\x92\xf9\x94\x2e\xc3\xb3\xc3\x18\x74\x77\x71\x22\x8b\x6d\x6f\xf1\x52\xad\xc5\x20\xda\x0a\xe7\xfa\xe5\xda\x58\xd4\x11\xf5\xaa\x6c\x31\x9a\x08\xf3\x69\x32\x8c\x06\xe3\xbf\xd2\x5f\xfc\x13\x00\x00\xff\xff\x4e\xd7\x9a\xed\xe9\x2b\x00\x00")

func jsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_jsAppJs,
		"js/app.js",
	)
}

func jsAppJs() (*asset, error) {
	bytes, err := jsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js/app.js", size: 11241, mode: os.FileMode(420), modTime: time.Unix(1462903830, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsApiHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x58\xe5\xe0\x04\xa8\x44\xa0\xe9\x29\xa0\x04\x14\x3d\xb5\x87\xd4\x48\xfb\x03\x6b\x69\x23\x12\xa5\x48\x75\x49\x19\x30\x02\xff\x7b\x49\xc9\xb2\xa5\x58\x70\x1f\x87\x5c\x4c\x7a\x39\x3b\x3b\x9c\xa1\x2d\x4c\x9d\x2a\x53\xea\xae\x42\xe6\xa8\xcc\x93\x75\x0b\xe4\x15\x68\xc7\x0d\xec\xb6\x40\x99\xf4\x8d\x5e\x27\x85\xe0\x67\x64\xb1\x5a\x89\x4a\xed\x58\xa9\xc1\xb9\x3c\x29\xad\xf1\xa0\x0c\x52\x52\xac\x18\x13\xf2\x43\xf1\xf5\xfb\xb7\xc7\xf4\x69\xf3\x99\x7d\xda\x7c\x11\x3c\x14\x62\x3d\x76\x04\x0e\xc2\x16\xc1\xe7\xc9\x2d\xb4\xea\x11\x1a\x7c\xcf\xc2\xe6\x8e\x29\x13\x57\xd7\x53\x0c\x24\x2f\x2f\xec\x08\x61\x87\x03\x6b\xd0\x4b\x5b\xb9\x91\x6d\x81\x6f\x40\x0c\x94\xc3\x7e\x64\xcd\x8e\xcd\x47\xf2\x48\xff\xb1\x10\xc0\x24\xe1\x73\x9e\x48\xef\x5b\xf7\xc0\x79\x6d\x2b\x5b\x66\x96\x6a\x5e\x2b\x2f\xbb\x6d\x56\xda\x86\x6f\xc9\x96\x00\xc4\xb5\x25\x70\x48\x3b\x24\xae\x8c\x47\x32\xa0\x27\xb5\x9b\x99\xd6\x70\xe9\x2c\x14\xce\x7a\x42\x2d\x99\x5f\xe7\xe2\x5c\x70\x08\x16\x07\x59\xa3\xc2\x89\xbf\x2d\x18\xd4\xac\xff\x4c\x2b\x7c\x86\x4e\xfb\xd3\x4d\x16\x90\xa9\x44\xa8\x94\xa9\x27\x98\x78\xe3\xfb\x39\xc8\x2b\xaf\x31\x29\x9e\xf0\x57\x87\xce\x3f\x30\xe1\x42\xfd\x04\xe9\xb4\x4e\x49\xd5\xd2\xf7\xba\x07\xa5\x19\x50\xdd\x35\x68\xfc\x8f\x7d\x8b\x63\x2c\x43\x5b\x7c\x1a\xc1\xc9\x57\xb8\xcd\xcf\x7a\x03\x5e\xb2\x77\x39\x5b\x87\x17\x74\x7b\xc5\xf1\xcb\x21\x63\xf3\xe1\x70\x73\x55\xc1\x92\xc0\x73\x6f\xb4\xf5\x4e\xf0\x28\xb2\x38\x2d\xf2\x7e\xe2\x1e\x0f\xf6\x5d\x33\x73\x6b\xab\xfd\xdc\xc9\x96\x70\x61\x66\x7c\xf2\xfd\xc0\x78\xbc\x4c\x3f\xff\xf2\x66\x01\xbb\xd6\x1a\x87\x7f\x95\x70\xf8\x2d\xe9\xfd\x9f\xe2\xed\x41\xff\x95\xed\xac\x73\x16\xec\xeb\xc1\x17\xa2\xde\x32\xd2\x7e\xe0\xbf\xe5\x39\xdd\x4a\xea\xff\xee\x86\xca\x71\xf9\x1d\x00\x00\xff\xff\x8c\xd4\x0e\x37\x67\x05\x00\x00")

func partialsApiHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsApiHtml,
		"partials/api.html",
	)
}

func partialsApiHtml() (*asset, error) {
	bytes, err := partialsApiHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/api.html", size: 1383, mode: os.FileMode(420), modTime: time.Unix(1462822854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsApplicationsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xc1\x6e\xd4\x30\x10\xbd\xef\x57\x58\x46\xa2\x70\xd8\x8d\x90\x7a\x82\x24\x12\x2a\x3d\x20\x01\x17\xc4\x07\x4c\x62\xef\xc6\xc2\xb1\x23\xc7\x59\x75\x55\xf5\xdf\x99\x89\x93\xac\x93\xa6\x2d\x3d\x80\x10\x6a\xa5\x36\x76\x66\x3c\xf3\xe6\x79\xe6\x35\xa9\x39\x6c\x95\x29\x75\x27\x24\x6b\x5d\x99\xf1\x8b\x06\x9c\x57\xa0\xdb\xc4\xc0\xb1\x00\xb7\xab\x7c\xad\x2f\x78\x9e\x26\x67\xcf\x7c\xb3\x49\x85\x3a\xb2\x52\x43\xdb\x66\xbc\xb4\xc6\x83\x32\xd2\xf1\x7c\xc3\x58\x6a\xf5\x68\x28\x9c\x04\x51\xba\xae\x2e\x7a\x0b\xfd\xa4\x5a\x8d\x56\x28\xbd\x3a\x4a\x9e\x7f\x6c\x1a\xad\x4a\xf0\xca\x9a\x36\x4d\xb4\xea\x83\x24\x56\x87\x23\xb4\xf1\x50\x68\x39\x1e\x0b\x9b\xfe\xef\xb6\xb2\xc7\x21\x2b\x79\x55\x98\x6d\xca\xe3\x2b\x0a\x7c\xfd\xe3\x73\x9a\xe0\x32\x7a\xfb\x0d\x6a\xb9\x78\x37\x85\x96\x37\x7e\xeb\xd4\xa1\xf2\x88\xaa\x1c\x00\x8d\x9e\xb4\x9a\x12\xa4\xbe\xb0\xe2\x74\x0e\xe1\x18\xb2\xe3\x64\x23\xc1\x63\x61\x4d\xc3\x94\x61\xf8\x68\xa7\xba\xc9\x49\xe4\xb7\xb7\xf4\x76\x07\x3d\x30\x76\x77\x87\x31\xc5\xaa\x87\x41\x90\x6b\xf6\x35\xa4\x93\x1d\x3d\x60\xa2\xde\x1b\x86\xbf\xdb\xb6\xee\x1f\x42\xee\xa1\xd3\x9e\xb3\xca\xc9\x7d\xc6\x93\x57\x09\x44\xac\x27\x4b\x5c\x3c\xbf\x16\xca\xa7\x09\xcc\x82\x17\x9d\xf7\xd6\x3c\x94\x01\xcc\x01\xef\x82\x78\x28\x31\xf0\xcf\x8c\x0b\xa9\xa5\x97\x6f\x30\xe8\x5b\x9e\x7f\xea\x37\xb3\x88\x71\x71\xb8\x76\x13\xcd\x23\xb5\xb8\xa4\x5b\xc6\x6e\xc3\x75\xd4\x6f\x94\xee\xe0\x6c\xd7\x70\xe6\xac\x96\x19\x1f\x36\xe0\x14\x6c\x35\x14\x52\x67\x7c\xb7\xdb\x8d\x7d\x31\xc0\xf6\xa7\x06\x5d\xc3\x86\x2f\x8b\x98\xf8\x39\xc3\x2f\xb1\x79\x11\x3e\x62\xbf\xea\x57\x2c\x62\x2c\x4d\x42\x9c\x80\x12\xa1\xe5\x9b\xe1\x31\x1b\x8c\xda\x0a\xd0\x6c\x0f\x42\x72\xa6\x44\xc6\x25\x92\xfa\x95\xde\x71\xea\x5f\x65\x84\xbc\xc9\xf8\xf6\xdd\x58\x86\xc0\xb1\xb3\x87\xb8\x0e\x2d\x45\x71\xc2\x38\xa7\xfe\xd4\x17\x7a\x15\x66\x6c\x99\x64\x3b\x9e\x1d\x22\xd9\xb2\xab\xa5\x19\x9b\xe3\xbe\x3b\x8d\xec\xd9\xbe\xe6\x41\xbd\x3e\xcd\xd6\x93\x3c\x96\xda\xb6\x58\xa4\x00\x0f\x08\xa5\xad\xd5\x14\x68\x7e\x2d\x57\xbd\x5f\x9e\xb6\x0d\x98\x60\xa8\x94\x10\xd2\x60\x47\xbb\x0e\x0d\xaf\xbd\xaa\x65\xfb\x21\x4d\xc8\x21\x8f\x69\x1e\x40\x54\x97\x73\x98\x5e\x79\x3d\xb0\x3b\x67\x89\x1a\x98\xdd\x9f\xb7\xea\xf2\xdc\x72\xfd\x85\x3d\x54\x3f\x35\x61\x5c\xfd\xde\xba\x7a\x36\x0d\xd1\x09\xb2\x0d\x1d\x19\xbb\x90\xda\x11\x18\x86\xf6\x8c\xd3\x48\xf3\x58\x32\xf1\xaa\x02\x2d\xbc\xd7\xa4\xf7\xa8\x7d\xb4\x5b\x44\x50\xa6\xe9\xfc\x40\x3a\x4d\x3d\x9f\x25\x1d\xe2\x04\x02\x42\x06\xec\x60\xac\x80\xc8\x1e\x85\x64\x2e\x11\x71\xd9\xb4\x8d\x0b\x7b\x82\x93\xbd\xb5\x7e\xde\x13\x91\x4b\xd3\x69\xac\x47\xee\x11\x2c\x89\x53\xa4\x07\x0a\x15\x47\x3a\x67\xf1\x24\x5e\x48\xbf\xea\xef\x62\x0e\xe4\x59\x63\xba\xd6\x68\x79\xdf\x5c\x2b\x3d\xf3\x3b\x91\x1b\xa7\x6a\x70\xa7\x58\x00\xba\x46\xc0\xa4\x5f\xdf\xe1\x88\xff\x81\x2a\x2a\xaa\x5d\xa6\x88\x2a\x99\x96\xcf\x50\x85\x20\x34\x2f\xba\xf0\x77\x74\x61\x4d\xcc\xff\x4d\x51\x08\x9f\x2f\x7f\x46\x16\x82\x22\x3e\x26\x0c\x2f\x0a\x77\xcf\xe5\xbf\x53\xb8\xe1\x13\x27\x28\xdc\xe3\x5f\x39\x0b\xee\xd6\x75\xee\x57\x00\x00\x00\xff\xff\x24\x01\xab\xa2\x4d\x0c\x00\x00")

func partialsApplicationsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsApplicationsHtml,
		"partials/applications.html",
	)
}

func partialsApplicationsHtml() (*asset, error) {
	bytes, err := partialsApplicationsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/applications.html", size: 3149, mode: os.FileMode(420), modTime: time.Unix(1462822854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsChannel_listHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xcb\x6e\xeb\x36\x10\xdd\xfb\x2b\x08\x06\x68\x12\xa0\xb2\x12\x20\xab\x56\x12\x50\xa4\x2d\xba\x48\xbb\xe9\x17\x50\xe2\xc8\x22\x42\x91\x2a\x49\x19\x71\x83\xfc\x7b\x87\x7a\x52\x8a\xdc\x34\x40\xef\xbd\x1b\x2f\x6c\x93\x9c\xe1\x3c\xce\xcc\x1c\x3a\x51\x87\x48\xa8\x42\xb6\x1c\x88\x35\x45\x4a\xaf\x1b\x66\x9c\x60\xd2\xc6\x8a\x1d\x73\x66\xf6\x95\xab\xe5\x35\xcd\x92\x78\xd6\xcc\x76\xbb\x84\x8b\x23\x29\x24\xb3\x36\xa5\x85\x56\x8e\x09\x05\x86\x66\x3b\x42\x12\x2d\x47\x41\x6e\x80\xf1\xc2\xb4\x75\xde\x49\x50\x26\x45\x96\x30\x52\x19\x28\x53\x1a\x5f\xc5\x45\xc5\x94\x02\x69\x69\xf6\xd8\xaf\x88\x14\xd6\xd9\x24\x66\xe8\x0f\x75\x09\x19\xaf\x8d\x26\x59\xe1\xc4\x11\x68\xf6\xfa\x4a\x86\xcb\x4f\x78\x63\xaf\x58\x0d\xe4\xed\xad\xbb\xe4\x63\x88\xb5\xc4\x20\x71\xe1\x58\x2e\x61\xbc\xdc\x6f\xba\xef\xa8\xd2\xc7\x21\x60\xaf\x55\x61\xa0\xfd\xba\xdb\x65\x57\x49\x8c\xdf\xc1\xc1\xaf\x06\xfe\x6a\x41\x15\x27\x72\xf3\xdb\xdf\xb7\x2b\xe9\x64\x1f\x5e\x5c\x64\xc4\xa1\x72\x34\xfb\x09\x03\xd5\xca\xce\x9a\x7e\x35\x79\x49\x5c\xae\xf9\x69\x36\x61\x08\xa2\x6b\xa0\x01\xe6\x10\xcf\x01\x0b\xa1\xc8\x0c\xd0\xa0\xea\x95\x79\x90\xfd\x7e\x54\xf6\xc9\x3b\x7e\x56\xad\x9c\xe2\xdf\x50\xdc\x8a\x7f\x92\xa3\x06\x9b\x0a\xea\x14\xc1\x4f\x64\xeb\xee\x87\x43\xc9\x5a\xe9\xa8\x0f\xbe\x90\xa2\x78\x4e\x29\x70\xe1\x86\x5a\xde\x0c\xbe\x6f\x69\xf6\x0b\x9e\xfa\xa2\x86\x46\xf3\xd6\x39\xad\xce\x59\x66\xea\x80\xe5\x09\x0c\x73\x90\xe0\xe0\xbd\xe9\x9f\xbb\xf3\x24\xee\xcd\x05\x69\x05\x49\xe2\xda\x4c\x45\x18\x81\xc7\xa5\x6f\x84\xbe\x4d\x82\x6e\xf6\xee\x0f\x46\xb7\x0d\x25\x46\x4b\x48\xe9\xb0\x61\x46\xb0\x48\xb2\x1c\x64\x4a\xf7\xfb\xfd\xd8\x3a\x43\x1a\xee\xd4\xa0\x6a\xbf\xa1\xeb\xa4\x36\x70\x2a\x70\x34\xe6\x74\x30\x8f\xc7\xee\x60\xac\x57\x98\x4f\x12\x63\x74\xd9\x6e\xf8\x59\x4c\x5e\xad\x39\x93\xa4\x64\x1c\x28\x11\x7c\x65\xf5\x77\x2f\xa4\xbe\xdd\x85\xe2\xf0\x92\xd2\xe8\x7e\x4c\x89\xe3\x80\xeb\x43\x98\x93\x04\x9e\x9f\xd0\xe0\xa9\xbb\xf5\xe4\x8f\xfa\x69\x5e\x7b\x8b\xc6\xbb\x83\x25\x5d\xb4\x35\xa8\xb1\x61\xde\xab\x7b\x72\x98\xe5\x5b\x1a\x7e\x2a\xa6\x51\xfc\x10\xd3\x42\x6a\x8b\xd9\x72\xe6\x18\x86\x62\x6b\x31\x19\x5a\x96\xe8\xb1\xd3\xcb\x12\xdb\x30\xd5\x0b\x2a\xc1\x39\x28\xec\x72\xd3\xa2\xe0\x3b\x27\x6a\xb0\x3f\x26\xb1\x57\xc8\x36\xfa\xa7\x7a\x58\x86\xe9\x84\x93\x03\xcc\x4b\x94\xd6\x95\xab\x1e\xe6\xbe\xeb\x4a\x76\x2e\x71\xdf\x89\x61\xda\xa5\x36\xf5\x62\x44\x82\x1b\x5e\x36\xb4\x65\xa8\xe2\xb9\xd1\x47\x41\x50\x9e\x52\xcf\x82\x34\x64\x65\xac\x51\x8f\xc7\x4c\xb0\x57\x3f\x20\x49\xfa\xa3\x95\x19\xa1\x9a\xd6\x0d\x90\x2b\x64\x6c\x3f\x7d\xa1\xef\xc1\x5c\x0f\x40\xef\x08\xbb\x19\x13\xf1\x60\xaf\xc8\x68\x1d\x62\x33\x5a\xaa\x40\x36\x51\x2e\x75\xf1\x4c\xb3\x3f\x3a\x27\x42\x1d\x88\x75\xf8\xe4\x58\xc2\x1c\xb9\x23\x37\x77\x24\x25\xa5\x30\xd6\x8d\x80\x7e\x4f\xee\xf1\xc8\x02\x06\xc0\xe7\x33\x9c\x40\x64\xe1\x66\x01\x57\x88\xf6\xff\x8e\xdf\xf2\x01\xf8\x92\x20\x4e\x54\x4d\xff\x25\xbb\x24\x0e\xbb\xe5\x83\x46\x2b\xb5\x76\xcb\x09\x0b\x54\x9a\x56\x62\x92\x50\x62\xdc\x9e\xfe\x03\xe6\x15\xf8\x48\x83\x31\xda\x74\xcf\x6d\xb7\xea\x5e\x8f\x65\x20\x9f\x22\xc0\xad\xb1\xcd\xba\x51\xdd\x98\xc0\xff\x62\xb9\x31\xa2\x66\xe6\x74\x9e\x5a\xe7\x97\xe2\x3c\xc3\xae\x20\x9c\x96\x9f\x60\xde\xe0\xdd\xbb\xf0\xee\xd7\xe1\x5d\xff\xa7\x62\xac\x26\x39\xf3\x8f\xe8\xc2\xc5\x17\x2e\xbe\x70\xf1\xb7\xe3\xe2\xb6\xe1\x9b\x5c\xfc\x27\x3b\xf6\x4c\x7c\x00\xfb\x69\x26\xfe\x27\x00\x00\xff\xff\xd9\x1a\x91\x04\xb4\x0e\x00\x00")

func partialsChannel_listHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsChannel_listHtml,
		"partials/channel_list.html",
	)
}

func partialsChannel_listHtml() (*asset, error) {
	bytes, err := partialsChannel_listHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/channel_list.html", size: 3764, mode: os.FileMode(420), modTime: time.Unix(1462822854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsChannel_listsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xcd\x8a\xdb\x30\x10\xbe\xe7\x29\x84\x0a\xdd\xf6\xe0\x98\xc2\x9e\x5a\xdb\x50\xd2\xde\xb6\xbd\xf4\x09\x64\x6b\x12\x8b\xca\x92\x91\xe4\xb0\x61\xd9\x77\xef\x48\xfe\x93\xbd\x5e\xb6\xa1\xd0\x53\x02\x89\x25\xcf\xe8\x9b\xf9\x46\x33\x5f\x32\x75\x4a\x84\xaa\x64\xc7\x81\x58\x53\xe5\xf4\xae\x65\xc6\x09\x26\x6d\xaa\xd8\xb9\x64\x66\x5f\xbb\x46\xde\xd1\x22\x4b\x67\xcf\x62\xb7\xcb\xb8\x38\x93\x4a\x32\x6b\x73\x5a\x69\xe5\x98\x50\x60\x68\xb1\x23\x24\xd3\x72\x34\x94\x06\x18\xaf\x4c\xd7\x94\xc1\xe2\x3f\x99\x14\xa3\x95\x55\x4e\x9c\x81\x16\x87\x9a\x29\x05\x92\x48\x61\x9d\xcd\x52\x29\x02\x4a\xaa\x25\x86\xc1\x85\x63\xa5\x84\xf1\x4c\xbf\x09\xbf\x49\xad\xcf\x43\x48\xef\x55\x63\xa8\x29\x88\xab\x8b\x9f\xac\x81\x2c\xc5\xc5\xfc\x6e\x02\x81\x47\x97\x18\x71\xaa\x1d\x2d\xbe\x62\x12\x5a\xd9\xd9\xd3\xaf\x26\xa8\xcc\x95\x9a\x5f\x66\x08\x43\xb0\x08\x06\x5a\x60\x0e\x69\xf7\x79\x3f\x60\xda\x44\x28\x12\x6d\xed\x44\xd7\x1f\xe2\xc5\xd3\x53\x6c\xdd\x2b\x4c\x8d\x3c\x3f\x63\x24\xbe\xf0\xdb\xca\x6f\xb2\x07\x1f\x36\x55\xd6\x29\x82\xdf\xc4\x36\xe1\xc1\xe1\xc8\x3a\xe9\x28\xa9\x0d\x1c\x73\x9a\xbe\x4b\x87\x78\x36\x5d\xc5\x16\x1c\x23\x4f\x35\x47\xde\xec\xda\x10\x58\x81\x4a\x8a\xea\x77\x4e\x81\x0b\xe7\x41\x3f\x44\x01\x3e\xd2\xe2\x3b\xbe\x7e\x89\x5b\x76\xce\x69\xf5\x1a\x38\x53\x27\xbc\xcb\x08\x9b\x83\x04\x07\x1b\xe8\xdf\x82\x21\x4b\x7b\xbc\xa8\x7e\x51\x35\x71\x6d\xa6\xdb\x1c\x6f\x10\x97\xbe\x6d\xfa\xa6\x8a\xba\xd7\xc7\x3f\x19\xdd\xb5\x94\x18\x2d\x21\xa7\xc3\x86\x19\xc1\x12\xc9\x4a\x90\x39\xdd\xef\xf7\x63\xa3\x0d\x3c\xdc\xa5\x45\xd7\x7e\x43\xd7\xac\x36\x6a\x55\xe1\x28\x0c\x7c\x90\xc4\x21\xec\xc6\x8b\x49\x7c\xe7\xc7\x8c\xb2\x14\xf3\x2b\x76\xc3\x63\x31\x6b\x8d\xe6\x4c\x92\x23\xe3\x40\x89\xe0\x23\xee\x61\x2e\xd1\x0f\xef\x40\xfd\x88\x08\xc5\xe1\x31\xa7\xc9\xa7\x91\x18\xc7\xb1\xd6\xa7\x98\x99\x04\x5e\x5e\x10\xf4\x12\x4e\x3d\xf8\x57\xfd\x0c\xaf\x23\x26\xe3\xd9\x01\x49\x57\x5d\x03\x6a\xec\xcf\x97\xee\x5e\x12\x66\xfb\x96\x87\x1f\xb2\x69\x7c\xdf\xac\x6c\x25\xb5\x45\xc6\x9c\x39\x86\xa9\xd8\x46\x4c\x40\xcb\x8b\x3a\x04\xbf\x22\xb3\x2d\x53\xbd\xa1\x16\x9c\x83\xc2\xa1\x32\x1d\x1a\xde\x3b\xd1\x80\xfd\x92\xa5\xde\xa1\xd8\xe8\xa2\xfa\x7e\x99\xa6\x13\x4e\x0e\xa5\x5e\x56\x69\xf3\x0a\xeb\xfb\xb9\x05\xc3\xdd\xbd\xc6\xde\x37\x65\xcc\xfd\xa8\x4d\x13\x0f\x4c\x7c\xc2\xdb\x86\x0e\x5d\xcd\x54\x20\x4d\xd0\x9e\x53\xaf\x29\x34\x16\x64\xbc\xa8\xbe\x28\x34\x48\xe1\x67\x14\x56\xbf\x5b\x21\x08\xd5\x76\x6e\x28\xb9\x97\x1d\xba\x08\x3a\xe0\xf4\xf4\xfb\x08\xd8\xd1\xc8\xc0\x97\x7a\xad\x68\x8b\xe4\x16\xf4\xfd\x36\x26\xf8\x46\x6d\x8e\x5a\xbb\x65\x67\x44\x2e\x6d\x27\x91\x17\x1c\x31\x69\xaf\x92\x91\x70\x08\x14\x3e\x30\x46\xe3\x49\xd4\xbc\xb0\x0a\x22\xbb\x4c\xe4\xaa\xf1\xdd\x6a\xb7\x22\xb4\xd8\x46\xe7\xfc\x0d\x72\x6b\x44\xc3\xcc\xe5\x15\x61\x58\x0a\xdd\x1b\x1a\xb1\x2a\xe4\xb4\xbc\x42\x3b\xbc\x7e\xdf\x94\xe3\xbf\x2b\x87\xff\x7f\xbc\xe9\xc6\x4d\x37\xfe\x4d\x37\xba\x96\x6f\xeb\xc6\x2f\x76\xee\x55\xe3\x04\xf6\x6a\xc1\xf8\x13\x00\x00\xff\xff\x97\xd5\x1e\xe9\x0f\x0c\x00\x00")

func partialsChannel_listsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsChannel_listsHtml,
		"partials/channel_lists.html",
	)
}

func partialsChannel_listsHtml() (*asset, error) {
	bytes, err := partialsChannel_listsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/channel_lists.html", size: 3087, mode: os.FileMode(420), modTime: time.Unix(1462822854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsNavbarHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x52\x41\x4f\xf3\x30\x0c\xbd\xef\x57\x44\xde\x61\xa7\x2a\xf7\x4f\x6d\xa4\x4f\x9c\x90\x10\x42\xc0\x1f\xf0\x1a\xb7\xb5\x14\x25\x55\x9a\x4e\x4c\x88\xff\x4e\xba\xa6\x61\xac\x20\xd8\x81\x53\x9c\xe7\x67\x3f\xfb\x25\xa5\xc5\x83\xa8\x0d\x0e\x43\x05\x31\xdc\xa3\x17\xf3\x51\x68\x6a\x70\x34\x01\xd4\x46\x88\x52\x73\x66\xd5\xce\x06\x64\x4b\xbe\x68\xcc\xc8\xfa\x94\xff\xcc\x48\x0d\x3a\x42\x4d\x3e\xe5\x23\x63\x3f\x86\xe0\xac\x08\xc7\x9e\x2a\x98\x2f\x70\x51\x12\x5c\xdb\x1a\x12\xb5\x33\x06\xfb\x81\x34\x08\x8d\x01\x13\x3c\x49\xcf\xf8\x02\xa3\x6f\x29\x54\xb0\x4d\xd5\x1f\x69\xf4\x8c\x05\xbd\xf4\x68\x35\xe9\x0a\x1a\x34\x11\xcd\x83\x0c\x11\x5f\x84\x07\x5f\x38\x6b\x8e\xa0\x9e\x67\xe9\xd8\x8a\x5b\x0c\xec\x6c\x29\x27\xde\x97\x45\x1c\x3d\x28\xa2\x22\xa8\x3f\x23\xc9\xd9\xa0\x7c\xc7\x0b\xa7\xf6\x3e\xee\x06\xa2\xf3\xd4\x54\x20\x41\xdd\xb9\x47\x14\x4f\xe4\x0f\xe4\x4b\x89\xe9\x4d\x64\x7c\x94\xf5\xf3\x2c\x36\x89\x95\x6d\xac\x73\xff\x0c\xe6\x09\x46\x73\x36\xc2\x52\x1b\x8f\xcc\x88\x1c\xc3\xc2\xb6\x45\xa2\xbd\x62\x1d\xf8\x40\xff\x44\x8f\x2d\x89\xaa\x12\x3b\xec\x7b\xc3\xf5\xc9\xdd\x61\xf7\x16\x77\xc6\x65\x81\xad\x3c\xcf\x81\xfa\x7f\x76\x9b\xf6\x29\xa5\xe1\xdf\xeb\x58\xa7\x69\x25\x70\x02\x41\xdd\x4f\xc7\xf5\x2d\xeb\x0e\xad\x25\xb3\xea\xba\xe0\xa0\x6e\x52\x74\xd9\xbb\x94\xa3\xf9\xd1\xc4\x25\xf4\xdc\x76\xe1\x2a\x47\x79\x6d\x24\x47\xff\x1e\x6e\xbf\x9f\x23\xff\x8b\x14\x94\x32\xaa\xab\xcd\x7b\x00\x00\x00\xff\xff\xb2\xa4\x06\x09\x0b\x04\x00\x00")

func partialsNavbarHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsNavbarHtml,
		"partials/navbar.html",
	)
}

func partialsNavbarHtml() (*asset, error) {
	bytes, err := partialsNavbarHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/navbar.html", size: 1035, mode: os.FileMode(420), modTime: time.Unix(1462822854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _partialsNodesHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\x51\x6f\xdb\x36\x10\x7e\x6e\x7e\x05\xc1\x02\x6b\x0b\xd4\xd6\x06\xf4\x69\x93\x05\x64\x49\x07\x14\xcb\x82\x21\x46\xd1\xbd\x52\x22\x2d\x11\xa1\x48\x81\xa4\x9c\x18\x45\xff\xfb\x8e\xa4\x64\x53\x8a\xed\x24\x8d\xd7\x0c\x81\x1f\x5a\x53\x77\xe7\xbb\xfb\x8e\xc7\xe3\x67\x25\x95\xe5\x84\xcb\x42\xb4\x94\x21\xa3\x8b\x19\x7e\xd3\x10\x6d\x39\x11\x26\x91\x64\x99\x13\x3d\xad\x6c\x2d\xde\xe0\x2c\x4d\x36\x96\xd9\xc9\x49\x4a\xf9\x12\x15\x82\x18\x33\xc3\x85\x92\x96\x70\xc9\x34\xce\x4e\x10\x4a\x95\xe8\x15\xb9\x66\x84\x16\xba\xad\x73\xaf\x01\x9d\xe0\xbd\x8e\x14\x96\x2f\x19\xce\x2e\x15\x65\x26\x4d\x04\xf7\xdf\x4d\x94\x00\xe7\xb0\xb0\x24\x17\xac\xb7\x0d\x0f\xfe\xff\x49\xa5\x96\x5d\x20\x67\x55\x41\x80\xb0\xf6\x4f\xd9\x39\x5b\x7e\xfc\xfc\x29\x4d\x60\x19\x49\x4f\x9b\x66\xbb\xf4\x4f\xb6\x1a\x49\xd7\x21\xd9\xad\x9d\x68\x5e\x56\x16\x67\xa7\x90\xaa\x92\x66\x63\xe9\x56\xeb\xc0\xa9\xcd\x15\x5d\x6d\x5c\x68\x04\x85\xd2\xac\x61\xc4\xce\xb0\x04\x74\x88\x4b\xe4\x3e\x0d\xee\x8d\x9c\x19\xcd\xbe\x7e\xf5\xe2\x29\xf5\x39\xa3\x6f\xdf\xc0\x2d\xdd\x6e\x42\x3c\x80\xfb\x4c\x00\xcd\x36\x93\x6d\x90\xd6\x7a\xb0\x20\xeb\xed\xb2\x12\xc1\xbf\x89\xa9\xfd\x07\x65\x0b\xd2\x0a\x8b\x1d\x9e\x42\xf0\xe2\x7a\x86\x0d\x33\x06\x4a\xf1\xd6\x45\x7c\x87\xb3\x79\x78\x44\x09\x3a\xfd\xfd\xef\x34\x21\x8f\x73\x5b\x69\xb6\x98\xe1\xe4\x75\xe2\x8b\x93\xdc\x29\x07\x46\x94\x58\x32\xb1\xaa\x2c\x05\x9b\xe1\x5a\x51\x22\x7a\x19\xd1\x25\x83\xf2\xbe\xae\x57\x7f\x79\x71\xf6\x91\x72\x3b\xce\x20\x6f\xad\x85\xec\x76\xa4\x41\x64\x09\x8d\x14\x81\xa3\x4c\x30\xcb\x7a\x6c\xe7\xfe\x69\xe0\x32\xae\x2c\xac\xf5\xba\x19\xfa\x06\x80\xa5\xeb\xd1\xd0\xc1\xd1\x01\x71\xf1\x4a\xad\xda\x06\x23\xad\x1c\x96\xee\x81\x68\x4e\x26\x82\xe4\x4c\xcc\xf0\x74\x3a\xed\xbb\xba\xcb\xdb\xae\x1a\x30\x0d\x0f\x78\x8c\x62\xcb\xe6\x14\x70\xda\x20\x7f\xc8\xfd\xcc\xaf\x7c\x39\xd3\x24\x38\x08\xe9\x41\x4e\xd9\x49\xf7\x31\x38\xc2\xbe\xb8\x68\x41\x28\xc3\x88\xd3\x19\x66\x50\xce\x50\x59\x77\xec\xb8\xa4\xec\x76\x86\x27\xbf\xf4\xf9\x53\x18\x10\xaa\x8c\x01\x08\x46\xf3\x15\xf8\x09\xfb\x71\xe1\x44\x61\x1a\x8c\x83\x4c\xfa\xef\x76\x9e\x54\xd1\xd6\x4c\xf6\x2d\x79\xd7\xdc\x0d\x97\x8d\x7e\x9b\x85\x3b\x8a\xeb\x91\x70\x6f\x01\x0b\xa1\x0c\xeb\xda\x88\x72\x53\xf3\xb5\xa3\xe1\x7e\x9c\x79\xbb\x2c\x35\x0d\x91\x41\x51\x71\x4a\x99\x84\x73\xa4\x5b\x50\xfc\x64\x79\xcd\xcc\x6f\x69\xe2\x0c\xb2\xb8\xcc\x5d\x12\xd5\x87\x61\x9a\x96\x5b\xd1\x55\x77\x58\x25\xd7\xba\x68\xcb\x49\xaf\x3e\x6c\x9a\xcd\xef\xd8\xae\x02\xb8\xf6\x8b\xe1\x2f\x94\xae\x07\x07\x21\xfa\x86\xd3\x75\xbd\x18\x9b\xb8\xd1\xec\xb2\x41\xa0\x87\xd9\xec\x93\xc0\xf1\x7c\x87\xdd\x0a\x95\xc1\xdd\x34\xfd\x15\x66\xb6\x7b\x1e\x79\xe1\xb2\x69\x6d\x57\x79\x37\x70\xf0\x20\x70\xe7\x29\x54\xa1\x8f\x02\x1d\x0c\x38\x5c\xcd\xa3\x0a\x0c\x47\x54\x8c\xff\x7b\x11\xc1\x74\xdc\x83\x08\xb4\x07\x41\xe4\xa3\xdc\x45\xe4\xc4\x87\x45\xa4\x6f\x61\x42\x91\x9d\x90\xae\xfe\xf1\xea\x07\x60\x92\x70\x3d\xbb\x41\xb8\x13\xd5\x3a\xd2\x08\x56\x2f\x1f\xf9\x6e\x7a\x4f\x15\x13\xcd\x24\x17\xaa\xb8\xc6\xd9\x97\x8a\x49\x24\xd8\x02\x82\x2a\xf4\xf3\x7b\x04\xf7\x27\xea\x46\x18\x7c\x82\x17\x74\xc3\x85\x40\x39\x43\xad\x61\x74\x9a\x26\xcd\x61\xab\x55\x54\x44\x4a\x26\x2e\xb8\xb1\xbb\x2a\x76\x16\x4c\x26\x02\x6c\x76\x94\xcd\xc0\x9d\x50\xd8\xdd\x95\x1a\x44\x19\x55\x2b\xd2\x7d\x3a\xf7\x5a\xd5\x78\x5a\x31\xf8\xda\x94\x53\x44\x0c\x8a\x25\x92\xd4\xcc\x81\x88\x85\x8e\x52\x44\x8f\x66\x84\xdc\x91\x30\xef\x1c\x2d\x89\x68\x61\x8f\x1d\x7d\x0b\x92\x11\xa2\x24\x40\x7a\xc8\x16\x8e\x22\x5c\x30\xb2\x64\x28\x17\x44\x5e\xfb\xec\xe2\x1d\xed\x52\x33\xef\x1d\x16\x10\x02\x37\xa4\x28\x5f\x79\x9b\x0b\x75\x45\xbe\x9c\x5e\x22\xd3\xb0\xc2\x4c\x47\x4e\x2f\x15\x5c\x5b\xb6\x22\xae\x29\x1a\x26\x29\x97\x25\x6a\x1b\xc0\xb1\x52\xad\x46\x9a\x95\x80\xe0\x3d\x32\xcc\x5a\xa7\x21\x7d\x20\xbf\x67\xa8\x76\xd4\x06\xa6\xa8\x75\x6d\x44\x96\x84\x0b\x77\x19\x4f\x47\x80\xf7\x35\x56\x9a\xc4\xa3\xf3\x9e\xa9\xbb\x50\x90\xac\xde\x7a\x2f\x35\xad\x80\x9c\x7c\xb7\x3b\xce\x15\x51\x0d\x0e\x8c\x87\x69\xad\xe0\x7b\x30\xf1\xfd\xca\xcf\xfa\x61\x1a\x8f\x22\x00\xdb\x6e\xb2\xcc\xdf\x5e\x5b\x2e\xa5\x87\x78\x6e\x34\xaf\x89\x5e\xc5\xd4\xa2\x6d\x28\xd9\x50\xa3\xb9\xdb\x79\x57\xfa\xd2\x31\xf7\x61\x8c\x08\xca\x7a\xf9\x08\xde\x11\x38\xcc\x91\x79\xfc\x18\xe6\x31\xe0\x89\xcf\x47\x37\x02\xe3\xdf\x35\x97\xc3\x4f\xba\xa7\x5f\xce\x7d\x94\xd1\x5c\xee\xc4\x07\xa7\x1b\x47\x02\xf5\x7d\x88\x8e\x04\xea\x48\xa0\x8e\x04\xea\x48\xa0\x5e\x16\x81\xea\xde\xcd\xfc\xf7\x04\xaa\x7b\x43\x77\x64\x50\x3f\x86\x41\xb9\xb7\xd7\xa8\xab\xb9\x3f\xc5\xee\x3d\x8e\x89\x5f\xe9\x3e\x2b\xad\x3a\xa5\x54\xef\xe1\x55\x4e\xbd\x63\x52\x3f\xe2\x04\xf9\xf5\xad\x41\xfe\xd0\x86\xf7\xcb\x51\xe7\x97\xcc\x5e\x11\x49\x55\xdd\xc5\x7b\x2b\x0d\x9c\x80\x92\x49\xa6\x89\xdd\x72\xc2\x7c\xf4\xc7\xd1\xba\x80\x32\xba\x2e\xfc\x06\x78\xe9\xc1\x49\xd0\x7c\x3f\x0b\x9a\x1f\x8a\x06\xcd\xc7\x3c\xc8\x4c\x7b\xe9\x61\x31\xc9\x9b\xeb\x7d\x98\x2e\x83\xfa\xe9\x98\xd6\x71\x06\x98\x7a\xe9\x61\x31\x2d\xce\xa4\xfd\xdc\xec\x82\xf4\x07\x68\xd1\xdb\xb6\x79\x77\x08\x6e\xd7\x87\x1a\xa0\xea\x84\x87\x07\x75\xae\x6e\xe4\x7e\x58\x14\x2c\x0e\x06\x2c\x84\xbb\x03\xcd\x8b\x5f\x12\x19\x37\x11\x15\x7f\xf5\xea\xd5\xff\x93\x81\x3f\xdb\xaf\xe4\xfe\x3a\x83\x8b\x97\x1b\xc7\x08\xe9\x0b\xf9\xb1\x6c\xfa\x9f\xca\x0f\x01\x76\xa4\xb6\x7b\xdf\x0d\xce\xfb\xbf\x0c\x9b\x27\xf3\xdb\x7f\x03\x00\x00\xff\xff\x6b\x4a\xd3\x37\x93\x20\x00\x00")

func partialsNodesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_partialsNodesHtml,
		"partials/nodes.html",
	)
}

func partialsNodesHtml() (*asset, error) {
	bytes, err := partialsNodesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "partials/nodes.html", size: 8339, mode: os.FileMode(420), modTime: time.Unix(1462903830, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"js/app.js": jsAppJs,
	"partials/api.html": partialsApiHtml,
	"partials/applications.html": partialsApplicationsHtml,
	"partials/channel_list.html": partialsChannel_listHtml,
	"partials/channel_lists.html": partialsChannel_listsHtml,
	"partials/navbar.html": partialsNavbarHtml,
	"partials/nodes.html": partialsNodesHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"js": &bintree{nil, map[string]*bintree{
		"app.js": &bintree{jsAppJs, map[string]*bintree{}},
	}},
	"partials": &bintree{nil, map[string]*bintree{
		"api.html": &bintree{partialsApiHtml, map[string]*bintree{}},
		"applications.html": &bintree{partialsApplicationsHtml, map[string]*bintree{}},
		"channel_list.html": &bintree{partialsChannel_listHtml, map[string]*bintree{}},
		"channel_lists.html": &bintree{partialsChannel_listsHtml, map[string]*bintree{}},
		"navbar.html": &bintree{partialsNavbarHtml, map[string]*bintree{}},
		"nodes.html": &bintree{partialsNodesHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

