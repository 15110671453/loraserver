syntax = "proto3";

package api;

// for grpc-gateway
import "google/api/annotations.proto";

// Application is the service managing the applications.
service Application {
	// Create creates the given application.
	rpc Create(CreateApplicationRequest) returns (CreateApplicationResponse) {
		option (google.api.http) = {
			post: "/api/v1/application"
			body: "*"
		};
	}

	// Get returns the application for the given AppEUI.
	rpc Get(GetApplicationRequest) returns (GetApplicationResponse) {
		option (google.api.http) = {
			get: "/api/v1/application/{appEUI}"
		};	
	}

	// Delete deletes the application matching the given AppEUI.
	rpc Delete(DeleteApplicationRequest) returns (DeleteApplicationResponse) {
		option (google.api.http) = {
			delete: "/api/v1/application/{appEUI}"
		};
	}

	// List lists the applications given an offset and limit.
	rpc List(ListApplicationRequest) returns (ListApplicationResponse) {
		option (google.api.http) = {
			get: "/api/v1/application/{offset}/{limit}"
		};
	}

	// Update updates the application matching the given AppEUI.
	rpc Update(UpdateApplicationRequest) returns (UpdateApplicationResponse) {
		option (google.api.http) = {
			put: "/api/v1/application/{appEUI}"
			body: "*"
		};
	}
}

message CreateApplicationRequest {
	// hex encoded AppEUI
	string appEUI = 1; 
    // name of the application
	string name = 2; 
}

message CreateApplicationResponse {}

message GetApplicationRequest {
	// hex encoded AppEUI
	string appEUI = 1;
}

message GetApplicationResponse {
	// hex encoded AppEUI
	string appEUI = 1;
	// name of the application
	string name = 2;
}

message DeleteApplicationRequest {
	// hex encoded AppEUI
	string appEUI = 1;
}

message DeleteApplicationResponse {}

message ListApplicationRequest {
	// max number of results to return
	int64 limit = 1; 
	// result offset (for pagination)
	int64 offset = 2; 
}

message ListApplicationResponse {
	// total number of applications
	int64 totalCount = 1; 
	repeated GetApplicationResponse result = 2;
}

message UpdateApplicationRequest {
	// hex encoded AppEUI
	string appEUI = 1; 
	// name of the application
	string name = 2; 
}

message UpdateApplicationResponse {}
