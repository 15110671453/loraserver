// Code generated by protoc-gen-go.
// source: application.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	application.proto
	node.proto
	channel.proto
	channelList.proto
	nodeSession.proto
	common.proto

It has these top-level messages:
	CreateApplicationRequest
	CreateApplicationResponse
	GetApplicationRequest
	GetApplicationResponse
	DeleteApplicationRequest
	DeleteApplicationResponse
	ListApplicationRequest
	ListApplicationResponse
	UpdateApplicationRequest
	UpdateApplicationResponse
	CreateNodeRequest
	CreateNodeResponse
	GetNodeRequest
	GetNodeResponse
	DeleteNodeRequest
	DeleteNodeResponse
	ListNodeRequest
	ListNodeResponse
	ListNodeByAppEUIRequest
	UpdateNodeRequest
	UpdateNodeResponse
	FlushTXPayloadQueueRequest
	FlushTXPayloadQueueResponse
	CreateChannelRequest
	CreateChannelResponse
	GetChannelRequest
	GetChannelResponse
	UpdateChannelRequest
	UpdateChannelResponse
	DeleteChannelRequest
	DeleteChannelResponse
	ListChannelsByChannelListRequest
	ListChannelsByChannelListResponse
	CreateChannelListRequest
	CreateChannelListResponse
	UpdateChannelListRequest
	UpdateChannelListResponse
	GetChannelListRequest
	GetChannelListResponse
	ListChannelListRequest
	ListChannelListResponse
	DeleteChannelListRequest
	DeleteChannelListResponse
	CreateNodeSessionRequest
	CreateNodeSessionResponse
	GetNodeSessionRequest
	GetNodeSessionResponse
	GetNodeSessionByDevEUIRequest
	UpdateNodeSessionRequest
	UpdateNodeSessionResponse
	DeleteNodeSessionRequest
	DeleteNodeSessionResponse
	GetRandomDevAddrRequest
	GetRandomDevAddrResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateApplicationRequest struct {
	// hex encoded AppEUI
	AppEUI string `protobuf:"bytes,1,opt,name=appEUI" json:"appEUI,omitempty"`
	// name of the application
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *CreateApplicationRequest) Reset()                    { *m = CreateApplicationRequest{} }
func (m *CreateApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationRequest) ProtoMessage()               {}
func (*CreateApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateApplicationResponse struct {
}

func (m *CreateApplicationResponse) Reset()                    { *m = CreateApplicationResponse{} }
func (m *CreateApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateApplicationResponse) ProtoMessage()               {}
func (*CreateApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetApplicationRequest struct {
	// hex encoded AppEUI
	AppEUI string `protobuf:"bytes,1,opt,name=appEUI" json:"appEUI,omitempty"`
}

func (m *GetApplicationRequest) Reset()                    { *m = GetApplicationRequest{} }
func (m *GetApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationRequest) ProtoMessage()               {}
func (*GetApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetApplicationResponse struct {
	// hex encoded AppEUI
	AppEUI string `protobuf:"bytes,1,opt,name=appEUI" json:"appEUI,omitempty"`
	// name of the application
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetApplicationResponse) Reset()                    { *m = GetApplicationResponse{} }
func (m *GetApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetApplicationResponse) ProtoMessage()               {}
func (*GetApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeleteApplicationRequest struct {
	// hex encoded AppEUI
	AppEUI string `protobuf:"bytes,1,opt,name=appEUI" json:"appEUI,omitempty"`
}

func (m *DeleteApplicationRequest) Reset()                    { *m = DeleteApplicationRequest{} }
func (m *DeleteApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteApplicationRequest) ProtoMessage()               {}
func (*DeleteApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeleteApplicationResponse struct {
}

func (m *DeleteApplicationResponse) Reset()                    { *m = DeleteApplicationResponse{} }
func (m *DeleteApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteApplicationResponse) ProtoMessage()               {}
func (*DeleteApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ListApplicationRequest struct {
	// max number of results to return
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// result offset (for pagination)
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *ListApplicationRequest) Reset()                    { *m = ListApplicationRequest{} }
func (m *ListApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationRequest) ProtoMessage()               {}
func (*ListApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ListApplicationResponse struct {
	// total number of applications
	TotalCount int64                     `protobuf:"varint,1,opt,name=totalCount" json:"totalCount,omitempty"`
	Result     []*GetApplicationResponse `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
}

func (m *ListApplicationResponse) Reset()                    { *m = ListApplicationResponse{} }
func (m *ListApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*ListApplicationResponse) ProtoMessage()               {}
func (*ListApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListApplicationResponse) GetResult() []*GetApplicationResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateApplicationRequest struct {
	// hex encoded AppEUI
	AppEUI string `protobuf:"bytes,1,opt,name=appEUI" json:"appEUI,omitempty"`
	// name of the application
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateApplicationRequest) Reset()                    { *m = UpdateApplicationRequest{} }
func (m *UpdateApplicationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateApplicationRequest) ProtoMessage()               {}
func (*UpdateApplicationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type UpdateApplicationResponse struct {
}

func (m *UpdateApplicationResponse) Reset()                    { *m = UpdateApplicationResponse{} }
func (m *UpdateApplicationResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateApplicationResponse) ProtoMessage()               {}
func (*UpdateApplicationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*CreateApplicationRequest)(nil), "api.CreateApplicationRequest")
	proto.RegisterType((*CreateApplicationResponse)(nil), "api.CreateApplicationResponse")
	proto.RegisterType((*GetApplicationRequest)(nil), "api.GetApplicationRequest")
	proto.RegisterType((*GetApplicationResponse)(nil), "api.GetApplicationResponse")
	proto.RegisterType((*DeleteApplicationRequest)(nil), "api.DeleteApplicationRequest")
	proto.RegisterType((*DeleteApplicationResponse)(nil), "api.DeleteApplicationResponse")
	proto.RegisterType((*ListApplicationRequest)(nil), "api.ListApplicationRequest")
	proto.RegisterType((*ListApplicationResponse)(nil), "api.ListApplicationResponse")
	proto.RegisterType((*UpdateApplicationRequest)(nil), "api.UpdateApplicationRequest")
	proto.RegisterType((*UpdateApplicationResponse)(nil), "api.UpdateApplicationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Application service

type ApplicationClient interface {
	// Create creates the given application.
	Create(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*CreateApplicationResponse, error)
	// Get returns the application for the given AppEUI.
	Get(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*GetApplicationResponse, error)
	// Delete deletes the application matching the given AppEUI.
	Delete(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*DeleteApplicationResponse, error)
	// List lists the applications given an offset and limit.
	List(ctx context.Context, in *ListApplicationRequest, opts ...grpc.CallOption) (*ListApplicationResponse, error)
	// Update updates the application matching the given AppEUI.
	Update(ctx context.Context, in *UpdateApplicationRequest, opts ...grpc.CallOption) (*UpdateApplicationResponse, error)
}

type applicationClient struct {
	cc *grpc.ClientConn
}

func NewApplicationClient(cc *grpc.ClientConn) ApplicationClient {
	return &applicationClient{cc}
}

func (c *applicationClient) Create(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*CreateApplicationResponse, error) {
	out := new(CreateApplicationResponse)
	err := grpc.Invoke(ctx, "/api.Application/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) Get(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*GetApplicationResponse, error) {
	out := new(GetApplicationResponse)
	err := grpc.Invoke(ctx, "/api.Application/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) Delete(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*DeleteApplicationResponse, error) {
	out := new(DeleteApplicationResponse)
	err := grpc.Invoke(ctx, "/api.Application/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) List(ctx context.Context, in *ListApplicationRequest, opts ...grpc.CallOption) (*ListApplicationResponse, error) {
	out := new(ListApplicationResponse)
	err := grpc.Invoke(ctx, "/api.Application/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) Update(ctx context.Context, in *UpdateApplicationRequest, opts ...grpc.CallOption) (*UpdateApplicationResponse, error) {
	out := new(UpdateApplicationResponse)
	err := grpc.Invoke(ctx, "/api.Application/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Application service

type ApplicationServer interface {
	// Create creates the given application.
	Create(context.Context, *CreateApplicationRequest) (*CreateApplicationResponse, error)
	// Get returns the application for the given AppEUI.
	Get(context.Context, *GetApplicationRequest) (*GetApplicationResponse, error)
	// Delete deletes the application matching the given AppEUI.
	Delete(context.Context, *DeleteApplicationRequest) (*DeleteApplicationResponse, error)
	// List lists the applications given an offset and limit.
	List(context.Context, *ListApplicationRequest) (*ListApplicationResponse, error)
	// Update updates the application matching the given AppEUI.
	Update(context.Context, *UpdateApplicationRequest) (*UpdateApplicationResponse, error)
}

func RegisterApplicationServer(s *grpc.Server, srv ApplicationServer) {
	s.RegisterService(&_Application_serviceDesc, srv)
}

func _Application_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Application/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).Create(ctx, req.(*CreateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Application/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).Get(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Application/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).Delete(ctx, req.(*DeleteApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Application/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).List(ctx, req.(*ListApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Application/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).Update(ctx, req.(*UpdateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Application_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Application",
	HandlerType: (*ApplicationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Application_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Application_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Application_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Application_List_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Application_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("application.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x94, 0xcf, 0x4e, 0xf2, 0x40,
	0x14, 0xc5, 0x53, 0xca, 0xd7, 0xe4, 0xbb, 0xac, 0x1c, 0x15, 0x6b, 0xc1, 0x46, 0x27, 0x44, 0x09,
	0x31, 0x34, 0xc2, 0x8e, 0x9d, 0x01, 0x21, 0x26, 0xae, 0x9a, 0xf0, 0x00, 0xa3, 0x0c, 0x64, 0x92,
	0xd2, 0x19, 0xe9, 0xe0, 0x86, 0xb0, 0xf1, 0x15, 0x7c, 0x0f, 0x5f, 0xc6, 0x57, 0xf0, 0x41, 0x4c,
	0x67, 0xc6, 0x48, 0x74, 0x4a, 0x24, 0x71, 0xd7, 0xf9, 0x77, 0xce, 0x3d, 0xf7, 0xfe, 0x52, 0xd8,
	0x23, 0x42, 0x24, 0xec, 0x81, 0x48, 0xc6, 0xd3, 0xb6, 0x58, 0x70, 0xc9, 0x91, 0x4b, 0x04, 0x0b,
	0xea, 0x33, 0xce, 0x67, 0x09, 0x8d, 0x88, 0x60, 0x11, 0x49, 0x53, 0x2e, 0xd5, 0x8d, 0x4c, 0x5f,
	0xc1, 0x43, 0xf0, 0xfb, 0x0b, 0x4a, 0x24, 0xbd, 0xfe, 0x7a, 0x1d, 0xd3, 0xc7, 0x25, 0xcd, 0x24,
	0xaa, 0x82, 0x47, 0x84, 0xb8, 0x19, 0xdf, 0xfa, 0xce, 0xa9, 0xd3, 0xfc, 0x1f, 0x9b, 0x15, 0x42,
	0x50, 0x4e, 0xc9, 0x9c, 0xfa, 0x25, 0xb5, 0xab, 0xbe, 0x71, 0x0d, 0x8e, 0x2d, 0x3a, 0x99, 0xe0,
	0x69, 0x46, 0x71, 0x04, 0x87, 0x23, 0x2a, 0x7f, 0xef, 0x80, 0x07, 0x50, 0xfd, 0xfe, 0x40, 0x4b,
	0xed, 0x54, 0x53, 0x07, 0xfc, 0x01, 0x4d, 0xe8, 0x2e, 0xd9, 0xf2, 0x1c, 0x96, 0x37, 0x26, 0xc7,
	0x10, 0xaa, 0x77, 0x2c, 0xb3, 0x05, 0x39, 0x80, 0x7f, 0x09, 0x9b, 0x33, 0xa9, 0xd4, 0xdc, 0x58,
	0x2f, 0x72, 0x13, 0x3e, 0x9d, 0x66, 0x54, 0xaa, 0xb2, 0xdc, 0xd8, 0xac, 0x70, 0x0a, 0x47, 0x3f,
	0x74, 0x4c, 0xbe, 0x10, 0x40, 0x72, 0x49, 0x92, 0x3e, 0x5f, 0xa6, 0x9f, 0x6a, 0x1b, 0x3b, 0xa8,
	0x0b, 0xde, 0x82, 0x66, 0xcb, 0x24, 0x97, 0x74, 0x9b, 0x95, 0x4e, 0xad, 0x4d, 0x04, 0x6b, 0xdb,
	0x9b, 0x15, 0x9b, 0xab, 0xf9, 0x90, 0xc7, 0x62, 0xf2, 0x27, 0x43, 0xb6, 0xe8, 0x68, 0xb3, 0xce,
	0x6b, 0x19, 0x2a, 0x1b, 0xfb, 0x68, 0x06, 0x9e, 0x26, 0x02, 0x9d, 0xa8, 0x1a, 0x8b, 0x30, 0x0b,
	0xc2, 0xa2, 0x63, 0xd3, 0xf5, 0xf0, 0xf9, 0xed, 0xfd, 0xa5, 0xe4, 0xe3, 0x7d, 0x85, 0xf0, 0xd3,
	0x55, 0xb4, 0x01, 0x7a, 0xcf, 0x69, 0xa1, 0x09, 0xb8, 0x23, 0x2a, 0x51, 0x60, 0xed, 0x84, 0xb6,
	0xd8, 0xd6, 0x25, 0xdc, 0x50, 0xfa, 0x21, 0xaa, 0x5b, 0xf4, 0xa3, 0x95, 0x6e, 0xc7, 0x1a, 0xcd,
	0xc1, 0xd3, 0x60, 0x98, 0x38, 0x45, 0x64, 0x99, 0x38, 0xc5, 0x10, 0x19, 0xbb, 0xd6, 0x76, 0x3b,
	0x0e, 0xe5, 0x1c, 0x11, 0xa4, 0x2b, 0xb7, 0x53, 0x17, 0xd4, 0xed, 0x87, 0xc6, 0xe8, 0x52, 0x19,
	0x9d, 0xa3, 0x86, 0xd5, 0x48, 0xa3, 0xb8, 0x8e, 0x56, 0x0a, 0xd5, 0x35, 0x12, 0xe0, 0xe9, 0xd9,
	0x9a, 0x7c, 0x45, 0xc0, 0x98, 0x7c, 0x85, 0x1c, 0xe0, 0x0b, 0x65, 0x7b, 0x16, 0x6c, 0xcd, 0xd7,
	0x73, 0x5a, 0xf7, 0x9e, 0xfa, 0x03, 0x75, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x18, 0x3d, 0xa9,
	0x5b, 0xb9, 0x04, 0x00, 0x00,
}
